{
    "project": {
        "name": "Prometheus Framework",
        "description": "description",
        "version": "0.1",
        "url": "http://github.com/groovy354/Prometheus"
    },
    "files": {
        "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "modules": {},
            "classes": {
                "Represents a BatchWriteResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "modules": {},
            "classes": {
                "Represents a OrderedBulkOperation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "modules": {},
            "classes": {
                "Represents a UnorderedBulkOperation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/collection/aggregation.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/collection/aggregation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/collection/core.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/collection/core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/collection/shared.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/collection/shared.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/commands/base_command.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/commands/base_command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/commands/db_command.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/commands/db_command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/commands/delete_command.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/commands/delete_command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/commands/get_more_command.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/commands/get_more_command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/commands/insert_command.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/commands/insert_command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/commands/kill_cursor_command.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/commands/kill_cursor_command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/commands/query_command.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/commands/query_command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/commands/update_command.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/commands/update_command.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "modules": {},
            "classes": {
                "Represents a \nReplicaset Configuration": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set_state.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set_state.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/connection/base.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/connection/connection.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/connection/connection.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "modules": {},
            "classes": {
                "Represents a Mongos connection with failover to backup proxies": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js",
            "modules": {},
            "classes": {
                "Represents a Read Preference.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/connection/server.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "modules": {},
            "classes": {
                "Represents a Server connection.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js",
            "modules": {},
            "classes": {
                "Represents the Grid.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "modules": {},
            "classes": {
                "Represents the GridStore.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "modules": {},
            "classes": {
                "Represents a GridFS File Stream.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/responses/mongo_reply.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/responses/mongo_reply.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/admin.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "modules": {},
            "classes": {
                "Represents the Admin methods of MongoDB.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/collection.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "modules": {},
            "classes": {
                "Represents a Collection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/cursor.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "modules": {},
            "classes": {
                "Represents a Cursor.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/cursorstream.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "modules": {},
            "classes": {
                "Represents a CursorStream.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/db.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "modules": {},
            "classes": {
                "Represents a Db": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/mongo_client.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "modules": {},
            "classes": {
                "Represents a MongoClient": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/mongodb/lib/mongodb/utils.js": {
            "name": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/open/lib/open.js": {
            "name": "bin/node_modules/open/lib/open.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-association/association.js": {
            "name": "bin/node_modules/prometheus-association/association.js",
            "modules": {
                "association": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-business-layer/biz-layer-jsonrpc-server.js": {
            "name": "bin/node_modules/prometheus-business-layer/biz-layer-jsonrpc-server.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-database-accessor/database-accessor.js": {
            "name": "bin/node_modules/prometheus-database-accessor/database-accessor.js",
            "modules": {
                "database-accessor": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-field-type/field-type.js": {
            "name": "bin/node_modules/prometheus-field-type/field-type.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-field-type-manager/types/association.js": {
            "name": "bin/node_modules/prometheus-field-type-manager/types/association.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-field-type-manager/field-type-manager.js": {
            "name": "bin/node_modules/prometheus-field-type-manager/field-type-manager.js",
            "modules": {
                "field-type-manager": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-resource-manager/resource-manager.js": {
            "name": "bin/node_modules/prometheus-resource-manager/resource-manager.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-resource-type/resource-type.js": {
            "name": "bin/node_modules/prometheus-resource-type/resource-type.js",
            "modules": {},
            "classes": {
                "": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-resource-type-field/resource-type-field.js": {
            "name": "bin/node_modules/prometheus-resource-type-field/resource-type-field.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js": {
            "name": "bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js",
            "modules": {
                "resource-type-manager": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/promise/lib/core.js": {
            "name": "bin/node_modules/promise/lib/core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io/lib/client.js": {
            "name": "bin/node_modules/socket.io/lib/client.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io/lib/index.js": {
            "name": "bin/node_modules/socket.io/lib/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io/lib/namespace.js": {
            "name": "bin/node_modules/socket.io/lib/namespace.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io/lib/socket.js": {
            "name": "bin/node_modules/socket.io/lib/socket.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io-client/lib/index.js": {
            "name": "bin/node_modules/socket.io-client/lib/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io-client/lib/manager.js": {
            "name": "bin/node_modules/socket.io-client/lib/manager.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io-client/lib/on.js": {
            "name": "bin/node_modules/socket.io-client/lib/on.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io-client/lib/socket.js": {
            "name": "bin/node_modules/socket.io-client/lib/socket.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io-client/lib/url.js": {
            "name": "bin/node_modules/socket.io-client/lib/url.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "bin/node_modules/socket.io-client/socket.io.js": {
            "name": "bin/node_modules/socket.io-client/socket.io.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "association": {
            "name": "association",
            "submodules": {},
            "classes": {
                "Represents a BatchWriteResult": 1,
                "Represents a OrderedBulkOperation": 1,
                "Represents a UnorderedBulkOperation": 1,
                "Represents a \nReplicaset Configuration": 1,
                "Represents a Mongos connection with failover to backup proxies": 1,
                "Represents a Read Preference.": 1,
                "Represents a Server connection.": 1,
                "Represents the Grid.": 1,
                "Represents the GridStore.": 1,
                "Represents a GridFS File Stream.": 1,
                "Represents the Admin methods of MongoDB.": 1,
                "Represents a Collection": 1,
                "Represents a Cursor.": 1,
                "Represents a CursorStream.": 1,
                "Represents a Db": 1,
                "Represents a MongoClient": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "line": 10,
            "description": "A module that creates Association Interface"
        },
        "database-accessor": {
            "name": "database-accessor",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "bin/node_modules/prometheus-database-accessor/database-accessor.js",
            "line": 1,
            "description": "Provides access to the database"
        },
        "field-type-manager": {
            "name": "field-type-manager",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "bin/node_modules/prometheus-field-type-manager/field-type-manager.js",
            "line": 1
        },
        "resource-type-manager": {
            "name": "resource-type-manager",
            "submodules": {},
            "classes": {
                "": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "bin/node_modules/prometheus-resource-type/resource-type.js",
            "line": 6
        }
    },
    "classes": {
        "Represents a BatchWriteResult": {
            "name": "Represents a BatchWriteResult",
            "shortname": "Represents a BatchWriteResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 48,
            "description": "Create a new BatchWriteResult instance (INTERNAL TYPE, do not instantiate directly)",
            "itemtype": "property",
            "type": "Boolean",
            "params": [
                {
                    "name": "batchResult",
                    "description": "internal data structure with results.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a BatchWriteResult instance",
                "type": "BatchWriteResult"
            }
        },
        "Represents a OrderedBulkOperation": {
            "name": "Represents a OrderedBulkOperation",
            "shortname": "Represents a OrderedBulkOperation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 12,
            "description": "Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "collection",
                    "description": "collection instance.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options for the collection.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "a ordered bulk operation instance.",
                "type": "Object"
            }
        },
        "Represents a UnorderedBulkOperation": {
            "name": "Represents a UnorderedBulkOperation",
            "shortname": "Represents a UnorderedBulkOperation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 12,
            "description": "Create a new UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "collection",
                    "description": "collection instance.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options for the collection.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "a ordered bulk operation instance.",
                "type": "Object"
            }
        },
        "Represents a \nReplicaset Configuration": {
            "name": "Represents a \nReplicaset Configuration",
            "shortname": "Represents a \nReplicaset Configuration",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 29,
            "description": "ReplSet constructor provides replicaset functionality\n\nOptions\n - **ha** {Boolean, default:true}, turn on high availability.\n - **haInterval** {Number, default:2000}, time between each replicaset status check.\n - **reconnectWait** {Number, default:1000}, time to wait in miliseconds before attempting reconnect.\n - **retries** {Number, default:30}, number of times to attempt a replicaset reconnect.\n - **rs_name** {String}, the name of the replicaset to connect to.\n - **socketOptions** {Object, default:null}, an object containing socket options to use (noDelay:(boolean), keepAlive:(number), connectTimeoutMS:(number), socketTimeoutMS:(number))\n - **strategy** {String, default:'ping'}, selection strategy for reads choose between (ping, statistical and none, default is ping)\n - **secondaryAcceptableLatencyMS** {Number, default:15}, sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms)\n - **connectWithNoPrimary** {Boolean, default:false}, sets if the driver should connect even if no primary is available\n - **connectArbiter** {Boolean, default:false}, sets if the driver should connect to arbiters or not.\n - **logger** {Object, default:null}, an object representing a logger that you want to use, needs to support functions debug, log, error **({error:function(message, object) {}, log:function(message, object) {}, debug:function(message, object) {}})**.\n - **poolSize** {Number, default:5}, number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n - **ssl** {Boolean, default:false}, use ssl connection (needs to have a mongod server with ssl support)\n - **sslValidate** {Boolean, default:false}, validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n - **sslCA** {Array, default:null}, Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n - **sslCert** {Buffer/String, default:null}, String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n - **sslKey** {Buffer/String, default:null}, String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n - **sslPass** {Buffer/String, default:null}, String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)",
            "params": [
                {
                    "name": "list",
                    "description": "of server objects participating in the replicaset.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "additional options for the replicaset connection.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Represents a Mongos connection with failover to backup proxies": {
            "name": "Represents a Mongos connection with failover to backup proxies",
            "shortname": "Represents a Mongos connection with failover to backup proxies",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 12,
            "description": "Mongos constructor provides a connection to a mongos proxy including failover to additional servers\n\nOptions\n - **socketOptions** {Object, default:null}, an object containing socket options to use (noDelay:(boolean), keepAlive:(number), connectTimeoutMS:(number), socketTimeoutMS:(number))\n - **ha** {Boolean, default:true}, turn on high availability, attempts to reconnect to down proxies\n - **haInterval** {Number, default:2000}, time between each replicaset status check.",
            "params": [
                {
                    "name": "list",
                    "description": "of mongos server objects",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "additional options for the mongos connection",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Represents a Read Preference.": {
            "name": "Represents a Read Preference.",
            "shortname": "Represents a Read Preference.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js",
            "line": 1,
            "description": "A class representation of the Read Preference.\n\nRead Preferences\n - **ReadPreference.PRIMARY**, Read from primary only. All operations produce an error (throw an exception where applicable) if primary is unavailable. Cannot be combined with tags (This is the default.).\n - **ReadPreference.PRIMARY_PREFERRED**, Read from primary if available, otherwise a secondary.\n - **ReadPreference.SECONDARY**, Read from secondary if available, otherwise error.\n - **ReadPreference.SECONDARY_PREFERRED**, Read from a secondary if available, otherwise read from the primary.\n - **ReadPreference.NEAREST**, All modes read from among the nearest candidates, but unlike other modes, NEAREST will include both the primary and all secondaries in the random selection.",
            "params": [
                {
                    "name": "the",
                    "description": "read preference type",
                    "type": "String"
                },
                {
                    "name": "tags",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "ReadPreference"
            }
        },
        "Represents a Server connection.": {
            "name": "Represents a Server connection.",
            "shortname": "Represents a Server connection.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 17,
            "description": "Class representing a single MongoDB Server connection\n\nOptions\n - **ssl** {Boolean, default:false}, use ssl connection (needs to have a mongod server with ssl support)\n - **sslValidate** {Boolean, default:false}, validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n - **sslCA** {Array, default:null}, Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n - **sslCert** {Buffer/String, default:null}, String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n - **sslKey** {Buffer/String, default:null}, String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n - **sslPass** {Buffer/String, default:null}, String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n - **poolSize** {Number, default:5}, number of connections in the connection pool, set to 5 as default for legacy reasons.\n - **socketOptions** {Object, default:null}, an object containing socket options to use (noDelay:(boolean), keepAlive:(number), connectTimeoutMS:(number), socketTimeoutMS:(number))\n - **logger** {Object, default:null}, an object representing a logger that you want to use, needs to support functions debug, log, error **({error:function(message, object) {}, log:function(message, object) {}, debug:function(message, object) {}})**.\n - **auto_reconnect** {Boolean, default:false}, reconnect on error.\n - **disableDriverBSONSizeCheck** {Boolean, default:false}, force the server to error if the BSON message is to big",
            "params": [
                {
                    "name": "host",
                    "description": "the server host",
                    "type": "String"
                },
                {
                    "name": "port",
                    "description": "the server port",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "optional options for insert command",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "": {
            "file": "bin/node_modules/prometheus-resource-type/resource-type.js",
            "line": 6,
            "description": "Represents a Resource type. Contains Fields of specified type.",
            "params": [
                {
                    "name": "from_type_name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "to_type_name",
                    "description": "",
                    "type": "String"
                }
            ],
            "throws": {
                "description": "Error when the type of data field for  is not\n    supported. Currently supported types for data field are instances of\n    {@link String}, {@link Array}, {@link Binary} and {@link Binary}\n    from the bson module",
                "type": "@link mongoObject"
            },
            "see": [
                "Chunk#buildMongoObject"
            ],
            "module": "resource-type-manager",
            "memberof": "field-type-manager",
            "this": "{Association}",
            "extends": "FieldType",
            "access": "inner",
            "tagname": ""
        },
        "Represents the Grid.": {
            "name": "Represents the Grid.",
            "shortname": "Represents the Grid.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js",
            "line": 4,
            "description": "A class representation of a simple Grid interface.",
            "params": [
                {
                    "name": "db",
                    "description": "A database instance to interact with.",
                    "type": "Db"
                },
                {
                    "name": "fsName",
                    "description": "optional different root collection for GridFS.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Grid"
            }
        },
        "Represents the GridStore.": {
            "name": "Represents the GridStore.",
            "shortname": "Represents the GridStore.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 26,
            "description": "A class representation of a file stored in GridFS.\n\nModes\n - **\"r\"** - read only. This is the default mode.\n - **\"w\"** - write in truncate mode. Existing data will be overwriten.\n - **w+\"** - write in edit mode (append is not guaranteed for concurrent operations)\n\nOptions\n - **root** {String}, root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n - **content_type** {String}, mime type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n - **chunk_size** {Number}, size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n - **metadata** {Object}, arbitrary data the user wants to store.\n - **readPreference** {String}, the prefered read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "db",
                    "description": "A database instance to interact with.",
                    "type": "Db"
                },
                {
                    "name": "id",
                    "description": "optional unique id for this file",
                    "type": "Any",
                    "optional": true
                },
                {
                    "name": "filename",
                    "description": "optional filename for this file, no unique constrain on the field",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "mode",
                    "description": "set the mode for this file.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "optional properties to specify.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "GridStore"
            }
        },
        "Represents a GridFS File Stream.": {
            "name": "Represents a GridFS File Stream.",
            "shortname": "Represents a GridFS File Stream.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "line": 8,
            "description": "ReadStream\n\nReturns a stream interface for the **file**.\n\nEvents\n - **data** {function(item) {}} the data event triggers when a document is ready.\n - **end** {function() {}} the end event triggers when there is no more documents available.\n - **close** {function() {}} the close event triggers when the stream is closed.\n - **error** {function(err) {}} the error event triggers if an error happens.",
            "params": [
                {
                    "name": "autoclose",
                    "description": "automatically close file when the stream reaches the end.",
                    "type": "Boolean"
                },
                {
                    "name": "cursor",
                    "description": "a cursor object that the stream wraps.",
                    "type": "GridStore"
                }
            ],
            "return": {
                "description": "",
                "type": "ReadStream"
            }
        },
        "Represents the Admin methods of MongoDB.": {
            "name": "Represents the Admin methods of MongoDB.",
            "shortname": "Represents the Admin methods of MongoDB.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 9,
            "description": "Allows the user to access the admin functionality of MongoDB",
            "params": [
                {
                    "name": "db",
                    "description": "Current db instance we wish to perform Admin operations on.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Constructor for Admin type.",
                "type": "Function"
            }
        },
        "Represents a Collection": {
            "name": "Represents a Collection",
            "shortname": "Represents a Collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 24,
            "description": "Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)\n\nOptions\n - **readPreference** {String}, the prefered read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **slaveOk** {Boolean, default:false}, Allow reads from secondaries.\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **raw** {Boolean, default:false}, perform all operations using raw bson objects.\n - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.",
            "params": [
                {
                    "name": "db",
                    "description": "db instance.",
                    "type": "Object"
                },
                {
                    "name": "collectionName",
                    "description": "collection name.",
                    "type": "String"
                },
                {
                    "name": "pkFactory",
                    "description": "alternative primary key factory.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "additional options for the collection.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "a collection instance.",
                "type": "Object"
            }
        },
        "Represents a Cursor.": {
            "name": "Represents a Cursor.",
            "shortname": "Represents a Cursor.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 13,
            "description": "Constructor for a cursor object that handles all the operations on query result\nusing find. This cursor object is unidirectional and cannot traverse backwards. Clients should not be creating a cursor directly,\nbut use find to acquire a cursor. (INTERNAL TYPE)\n\nOptions\n - **skip** {Number} skip number of documents to skip.\n - **limit** {Number}, limit the number of results to return. -1 has a special meaning and is used by Db.eval. A value of 1 will also be treated as if it were -1.\n - **sort** {Array | Object}, set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n - **hint**  {Object}, hint force the query to use a specific index.\n - **explain** {Boolean}, explain return the explaination of the query.\n - **snapshot** {Boolean}, snapshot Snapshot mode assures no duplicates are returned.\n - **timeout** {Boolean}, timeout allow the query to timeout.\n - **tailable** {Boolean}, tailable allow the cursor to be tailable.\n - **awaitdata** {Boolean}, awaitdata allow the cursor to wait for data, only applicable for tailable cursor.\n - **oplogReplay** {Boolean}, sets an internal flag, only applicable for tailable cursor.\n - **batchSize** {Number}, batchSize the number of the subset of results to request the database to return for every request. This should initially be greater than 1 otherwise the database will automatically close the cursor. The batch size can be set to 1 with cursorInstance.batchSize after performing the initial query to the database.\n - **raw** {Boolean}, raw return all query documents as raw buffers (default false).\n - **read** {Boolean}, read specify override of read from source (primary/secondary).\n - **returnKey** {Boolean}, returnKey only return the index key.\n - **maxScan** {Number}, maxScan limit the number of items to scan.\n - **min** {Number}, min set index bounds.\n - **max** {Number}, max set index bounds.\n - **maxTimeMS** {Number}, number of miliseconds to wait before aborting the query.\n - **showDiskLoc** {Boolean}, showDiskLoc show disk location of results.\n - **comment** {String}, comment you can put a $comment field on a query to make looking in the profiler logs simpler.\n - **numberOfRetries** {Number}, numberOfRetries if using awaidata specifies the number of times to retry on timeout.\n - **dbName** {String}, dbName override the default dbName.\n - **tailableRetryInterval** {Number}, tailableRetryInterval specify the miliseconds between getMores on tailable cursor.\n - **exhaust** {Boolean}, exhaust have the server send all the documents at once as getMore packets.\n - **partial** {Boolean}, partial have the sharded system return a partial result from mongos.",
            "params": [
                {
                    "name": "db",
                    "description": "the database object to work with.",
                    "type": "Db"
                },
                {
                    "name": "collection",
                    "description": "the collection to query.",
                    "type": "Collection"
                },
                {
                    "name": "selector",
                    "description": "the query selector.",
                    "type": "Object"
                },
                {
                    "name": "fields",
                    "description": "an object containing what fields to include or exclude from objects returned.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options for the collection.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Represents a CursorStream.": {
            "name": "Represents a CursorStream.",
            "shortname": "Represents a CursorStream.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 11,
            "description": "CursorStream\n\nReturns a stream interface for the **cursor**.\n\nOptions\n - **transform** {Function} function of type function(object) { return transformed }, allows for transformation of data before emitting.\n\nEvents\n - **data** {function(item) {}} the data event triggers when a document is ready.\n - **error** {function(err) {}} the error event triggers if an error happens.\n - **close** {function() {}} the end event triggers when there is no more documents available.",
            "params": [
                {
                    "name": "cursor",
                    "description": "a cursor object that the stream wraps.",
                    "type": "Cursor"
                }
            ],
            "return": {
                "description": "",
                "type": "Stream"
            }
        },
        "Represents a Db": {
            "name": "Represents a Db",
            "shortname": "Represents a Db",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 41,
            "description": "Create a new Db instance.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **native_parser** {Boolean, default:false}, use c++ bson parser.\n - **forceServerObjectId** {Boolean, default:false}, force server to create _id fields instead of client.\n - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n - **serializeFunctions** {Boolean, default:false}, serialize functions.\n - **raw** {Boolean, default:false}, perform operations using raw bson buffers.\n - **recordQueryStats** {Boolean, default:false}, record query statistics during execution.\n - **retryMiliSeconds** {Number, default:5000}, number of milliseconds between retries.\n - **numberOfRetries** {Number, default:5}, number of retries off connection.\n - **logger** {Object, default:null}, an object representing a logger that you want to use, needs to support functions debug, log, error **({error:function(message, object) {}, log:function(message, object) {}, debug:function(message, object) {}})**.\n - **slaveOk** {Number, default:null}, force setting of SlaveOk flag on queries (only use when explicitly connecting to a secondary server).\n - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n - **bufferMaxEntries** {Number, default: -1}, sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited",
            "params": [
                {
                    "name": "databaseName",
                    "description": "name of the database.",
                    "type": "String"
                },
                {
                    "name": "serverConfig",
                    "description": "server config object.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options for the collection.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "Represents a MongoClient": {
            "name": "Represents a MongoClient",
            "shortname": "Represents a MongoClient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "association",
            "file": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "line": 10,
            "description": "Create a new MongoClient instance.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **readPreference** {String}, the prefered read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **native_parser** {Boolean, default:false}, use c++ bson parser.\n - **forceServerObjectId** {Boolean, default:false}, force server to create _id fields instead of client.\n - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n - **serializeFunctions** {Boolean, default:false}, serialize functions.\n - **raw** {Boolean, default:false}, peform operations using raw bson buffers.\n - **recordQueryStats** {Boolean, default:false}, record query statistics during execution.\n - **retryMiliSeconds** {Number, default:5000}, number of miliseconds between retries.\n - **numberOfRetries** {Number, default:5}, number of retries off connection.\n - **bufferMaxEntries** {Boolean, default: -1}, sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited",
            "params": [
                {
                    "name": "serverConfig",
                    "description": "server config object.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options for the collection.",
                    "type": "Object",
                    "optional": true
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 14,
            "description": "Helper function to define properties",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 26,
            "description": "Keeps the state of a unordered batch so we can rewrite the results\ncorrectly after command execution",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 39,
            "description": "Wraps a legacy operation so we can correctly rewrite it's error",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 69,
            "description": "Return an array of upserted ids",
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 79,
            "description": "Return the upserted id at position x",
            "params": [
                {
                    "name": "index",
                    "description": "the number of the upserted id to return, returns undefined if no result for passed in index",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 90,
            "description": "Return raw internal result",
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 100,
            "description": "Returns true if the bulk operation contains a write error",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 110,
            "description": "Returns the number of write errors off the bulk operation",
            "return": {
                "description": "",
                "type": "Number"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 120,
            "description": "Returns a specific write error object",
            "return": {
                "description": "",
                "type": "WriteError"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 133,
            "description": "Retrieve all write errors",
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 143,
            "description": "Retrieve lastOp if available",
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 153,
            "description": "Retrieve the write concern error if any",
            "return": {
                "description": "",
                "type": "WriteConcernError"
            },
            "api": "public",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 194,
            "description": "Wraps a write concern error",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 213,
            "description": "Wraps the error",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js",
            "line": 239,
            "description": "Merges results into shared data structure",
            "class": "Represents a BatchWriteResult"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 71,
            "description": "Add a single update document to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "update operations",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 96,
            "description": "Add a single update one document to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "update operations",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 121,
            "description": "Add a replace one operation to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "the new document to replace the existing one with",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 132,
            "description": "Upsert modifier for update bulk operation",
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 143,
            "description": "Add a remove one operation to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "selector for the removal of documents",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 163,
            "description": "Add a remove operation to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "selector for the single document to remove",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 184,
            "description": "Add a single insert document to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "the document to insert",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 260,
            "description": "Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne",
            "params": [
                {
                    "name": "doc",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 480,
            "description": "Execute the ordered bulk operation\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from from the ordered bulk operation.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js",
            "line": 522,
            "description": "Returns an unordered batch object",
            "class": "Represents a OrderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 75,
            "description": "Add a single update document to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "update operations",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 100,
            "description": "Add a single update one document to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "update operations",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 125,
            "description": "Add a replace one operation to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "the new document to replace the existing one with",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 136,
            "description": "Upsert modifier for update bulk operation",
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 147,
            "description": "Add a remove one operation to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "selector for the removal of documents",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 167,
            "description": "Add a remove operation to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "selector for the single document to remove",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 267,
            "description": "Add a single insert document to the bulk operation",
            "params": [
                {
                    "name": "doc",
                    "description": "the document to insert",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 279,
            "description": "Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne",
            "params": [
                {
                    "name": "selector",
                    "description": "the selector used to locate documents for the operation",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 347,
            "description": "Execute the unordered bulk operation\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from from the unordered bulk operation.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js",
            "line": 568,
            "description": "Returns an unordered batch object",
            "class": "Represents a UnorderedBulkOperation"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/aggregation.js",
            "line": 7,
            "description": "Functions that are passed as scope args must\nbe converted to Code instances.",
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/aggregation.js",
            "line": 132,
            "description": "Group function helper",
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/core.js",
            "line": 9,
            "description": "Precompiled regexes",
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/shared.js",
            "line": 60,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection/shared.js",
            "line": 88,
            "description": "Normalizes a `hint` argument.",
            "params": [
                {
                    "name": "hint",
                    "description": "",
                    "type": "String|Object|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/commands/base_command.js",
            "line": 1,
            "description": "Base object used for common functionality",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/commands/db_command.js",
            "line": 7,
            "description": "Db Command",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/commands/delete_command.js",
            "line": 4,
            "description": "Insert Document Command",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/commands/get_more_command.js",
            "line": 5,
            "description": "Get More Document Command",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/commands/insert_command.js",
            "line": 4,
            "description": "Insert Document Command",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/commands/kill_cursor_command.js",
            "line": 5,
            "description": "Insert Document Command",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/commands/query_command.js",
            "line": 4,
            "description": "Insert Document Command",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/commands/update_command.js",
            "line": 4,
            "description": "Update Document Command",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 117,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 145,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 158,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 176,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 275,
            "description": "Creates a new server for the `replset` based on `host`.",
            "params": [
                {
                    "name": "host",
                    "description": "- host:port pair (localhost:27017)",
                    "type": "String"
                },
                {
                    "name": "replset",
                    "description": "- the ReplSet instance",
                    "type": "ReplSet"
                }
            ],
            "return": {
                "description": "",
                "type": "Server"
            },
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 540,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 561,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 711,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 759,
            "description": "Pick a secondary using round robin",
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 783,
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 810,
            "description": "Get list of secondaries",
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js",
            "line": 820,
            "description": "Get list of secondaries",
            "ignore": "",
            "class": "Represents a \nReplicaset Configuration"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set_state.js",
            "line": 1,
            "description": "Interval state object constructor",
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 13,
            "description": "Internal class for callback storage",
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 25,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 38,
            "description": "Internal class for holding non-executed commands",
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 138,
            "description": "Internal class for authentication storage",
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 200,
            "description": "Internal class for storing db references",
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 292,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 297,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 330,
            "description": "Fire all the errors",
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 351,
            "description": "Fire all the errors",
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 380,
            "description": "Register a handler",
            "ignore": "",
            "api": "private",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 398,
            "description": "Re-Register a handler, on the cursor id f.ex",
            "ignore": "",
            "api": "private",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 410,
            "ignore": "",
            "api": "private",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 423,
            "ignore": "",
            "api": "private",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 455,
            "ignore": "",
            "api": "private",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 464,
            "ignore": "",
            "api": "private",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 480,
            "ignore": "",
            "api": "private",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/base.js",
            "line": 491,
            "ignore": "",
            "api": "private",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/connection.js",
            "line": 206,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 85,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 90,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 97,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 386,
            "ignore": "Add a server to the list of up servers and sort them by ping time",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 424,
            "ignore": "Just return the currently picked active connection",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 432,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 442,
            "description": "Always ourselves",
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 448,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 462,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 469,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 476,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 481,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 486,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 493,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 503,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 523,
            "ignore": "",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/mongos.js",
            "line": 562,
            "ignore": "Return the used state",
            "class": "Represents a Mongos connection with failover to backup proxies"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js",
            "line": 24,
            "ignore": "",
            "class": "Represents a Read Preference."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js",
            "line": 34,
            "ignore": "",
            "class": "Represents a Read Preference."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js",
            "line": 42,
            "ignore": "",
            "class": "Represents a Read Preference."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js",
            "line": 55,
            "ignore": "",
            "class": "Represents a Read Preference."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js",
            "line": 64,
            "ignore": "",
            "class": "Represents a Read Preference."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 130,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 142,
            "description": "Always ourselves",
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 150,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 157,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 164,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 199,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 206,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 217,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 224,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 231,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 241,
            "description": "Assigns a replica set to this `server`.",
            "params": [
                {
                    "name": "replset",
                    "description": "",
                    "type": "ReplSet"
                }
            ],
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 253,
            "description": "Takes needed options from `replset` and overwrites\nour own options.",
            "params": [
                {
                    "name": "replset",
                    "description": "",
                    "type": "ReplSet"
                }
            ],
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 287,
            "description": "Opens this server connection.",
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 630,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 704,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 711,
            "description": "Check if a writer can be provided",
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 731,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 754,
            "description": "Check if a reader can be provided",
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 777,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 799,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 806,
            "description": "Internal statistics object used for calculating average and standard devitation on\nrunning queries",
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 845,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 865,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 874,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 886,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 898,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 907,
            "description": "Getter for query Stats",
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 917,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 926,
            "description": "Get Read Preference method",
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/connection/server.js",
            "line": 942,
            "ignore": "",
            "class": "Represents a Server connection."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 50,
            "description": "Writes a data to this object and advance the read/write head.",
            "params": [
                {
                    "name": "data",
                    "description": "the data to write",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "This will be called after executing\n    this method. The first parameter will contain null and the second one\n    will contain a reference to this object.",
                    "type": "Function(*, GridStore)"
                }
            ],
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 65,
            "description": "Reads data and advances the read/write head.",
            "params": [
                {
                    "name": "length",
                    "description": "The length of data to read.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The data read if the given length will not exceed the end of\n    the chunk. Returns an empty String otherwise.",
                "type": "String"
            },
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 102,
            "description": "Checks if the read/write head is at the end.",
            "return": {
                "description": "Whether the read/write head has reached the end of this\n    chunk.",
                "type": "Boolean"
            },
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 112,
            "description": "Reads one character from the data of this chunk and advances the read/write\nhead.",
            "return": {
                "description": "a single character data read if the the read/write head is\n    not at the end of the chunk. Returns an empty String otherwise.",
                "type": "String"
            },
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 123,
            "description": "Clears the contents of the data in this chunk and resets the read/write head\nto the initial position.",
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 132,
            "description": "Saves this chunk to the database. Also overwrites existing entries having the\nsame id as this chunk.",
            "params": [
                {
                    "name": "callback",
                    "description": "This will be called after executing\n    this method. The first parameter will contain null and the second one\n    will contain a reference to this object.",
                    "type": "Function(*, GridStore)"
                }
            ],
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 177,
            "description": "Creates a mongoDB object representation of this chunk.",
            "params": [
                {
                    "name": "callback",
                    "description": "This will be called after executing this \n    method. The object will be passed to the first parameter and will have\n    the structure:\n       \n       <pre><code>\n       {\n         '_id' : , // {number} id for this chunk\n         'files_id' : , // {number} foreign key to the file collection\n         'n' : , // {number} chunk number\n         'data' : , // {bson#Binary} the chunk data itself\n       }\n       </code></pre>",
                    "type": "Function(Object)"
                }
            ],
            "see": [
                "<a href=\"http://www.mongodb.org/display/DOCS/GridFS+Specification#GridFSSpecification-{{chunks}}\">MongoDB GridFS Chunk Object Structure</a>"
            ],
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 206,
            "return": {
                "description": "the length of the data",
                "type": "Number"
            },
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 213,
            "description": "The position of the read/write head",
            "name": "position",
            "lends": "Chunk#",
            "field": "",
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js",
            "line": 228,
            "description": "The default chunk size",
            "constant": "",
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js",
            "line": 20,
            "description": "Puts binary data to the grid\n\nOptions\n - **_id** {Any}, unique id for this file\n - **root** {String}, root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n - **content_type** {String}, mime type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n - **chunk_size** {Number}, size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n - **metadata** {Object}, arbitrary data the user wants to store.",
            "params": [
                {
                    "name": "data",
                    "description": "buffer with Binary Data.",
                    "type": "Buffer"
                },
                {
                    "name": "options",
                    "description": "the options for the files.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method is executed. The first parameter will contain an Error object if an error occured or null otherwise. The second parameter will contain a reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js",
            "line": 66,
            "description": "Get binary data to the grid",
            "params": [
                {
                    "name": "id",
                    "description": "for file.",
                    "type": "Any"
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method is executed. The first parameter will contain an Error object if an error occured or null otherwise. The second parameter will contain a reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js",
            "line": 87,
            "description": "Delete file from grid",
            "params": [
                {
                    "name": "id",
                    "description": "for file.",
                    "type": "Any"
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method is executed. The first parameter will contain an Error object if an error occured or null otherwise. The second parameter will contain a reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Grid."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1,
            "fileoverview": "GridFS is a tool for MongoDB to store files to the database.\nBecause of the restrictions of the object size the database can hold, a\nfacility to split a file into several chunks is needed. The {@link GridStore}\nclass offers a simplified api to interact with files while managing the\nchunks of split files behind the scenes. More information about GridFS can be\nfound <a href=\"http://www.mongodb.org/display/DOCS/GridFS\">here</a>.",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 106,
            "description": "Code for the streaming capabilities of the gridstore object\nMost code from Aaron heckmanns project https://github.com/aheckmann/gridfs-stream\nModified to work on the gridstore object itself",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 122,
            "description": "Opens the file from the database and initialize this object. Also creates a\nnew one if file does not exist.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain an **{Error}** object and the second parameter will be null if an error occured. Otherwise, the first parameter will be null and the second will contain the reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 163,
            "description": "Hidding the _open function",
            "ignore": "",
            "api": "private",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 278,
            "description": "Stores a file from the file system to the GridFS database.",
            "params": [
                {
                    "name": "file",
                    "description": "the file to store.",
                    "type": "String|Buffer|FileHandle"
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method is executed. The first parameter will be null and the the second will contain the reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 346,
            "description": "Writes some data. This method will work properly only if initialized with mode\n\"w\" or \"w+\".",
            "params": [
                {
                    "name": "string",
                    "description": "The data to write.",
                    "type": "String"
                },
                {
                    "name": "close",
                    "description": "opt_argument Closes this file after writing if\n    true.",
                    "type": "Boolean=false"
                },
                {
                    "name": "callback",
                    "description": "This will be called after executing\n    this method. The first parameter will contain null and the second one\n    will contain a reference to this object.",
                    "type": "Function(*, GridStore)"
                }
            ],
            "ignore": "",
            "api": "private",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 436,
            "description": "Creates a mongoDB object representation of this object.",
            "params": [
                {
                    "name": "callback",
                    "description": "This will be called after executing this\n    method. The object will be passed to the first parameter and will have\n    the structure:\n\n       <pre><code>\n       {\n         '_id' : , // {number} id for this file\n         'filename' : , // {string} name for this file\n         'contentType' : , // {string} mime type for this file\n         'length' : , // {number} size of this file?\n         'chunksize' : , // {number} chunk size used by this file\n         'uploadDate' : , // {Date}\n         'aliases' : , // {array of string}\n         'metadata' : , // {string}\n       }\n       </code></pre>",
                    "type": "Function(object)"
                }
            ],
            "ignore": "",
            "api": "private",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 481,
            "description": "Saves this file to the database. This will overwrite the old entry if it\nalready exists. This will work properly only if mode was initialized to\n\"w\" or \"w+\".",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. Passes an **{Error}** object to the first parameter and null to the second if an error occured. Otherwise, passes null to the first and a reference to this object to the second.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 561,
            "description": "Gets the nth chunk of this file.",
            "params": [
                {
                    "name": "chunkNumber",
                    "description": "The nth chunk to retrieve.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "This will be called after\n    executing this method. null will be passed to the first parameter while\n    a new {@link Chunk} instance will be passed to the second parameter if\n    the chunk was found or an empty object {} if not.",
                    "type": "Function(*, Chunk|object)"
                }
            ],
            "ignore": "",
            "api": "private",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 590,
            "ignore": "",
            "api": "private",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 599,
            "return": {
                "description": "The last chunk number of this file.",
                "type": "Number"
            },
            "ignore": "",
            "api": "private",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 609,
            "description": "Retrieve this file's chunks collection.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. An exception object will be passed to the first parameter when an error occured or null otherwise. A new **{Collection}** object will be passed to the second parameter if no error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 622,
            "description": "Deletes all the chunks of this file in the database.",
            "params": [
                {
                    "name": "callback",
                    "description": "This will be called after this method\n    executes. Passes null to the first and true to the second argument.",
                    "type": "Function(*, boolean)"
                }
            ],
            "ignore": "",
            "api": "private",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 649,
            "description": "Deletes all the chunks of this file in the database.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after this method executes. Passes null to the first and true to the second argument.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 677,
            "description": "Retrieves the file collection associated with this object.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. An exception object will be passed to the first parameter when an error occured or null otherwise. A new **{Collection}** object will be passed to the second parameter if no error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 690,
            "description": "Reads the data of this file.",
            "params": [
                {
                    "name": "separator",
                    "description": "the character to be recognized as the newline separator.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "This will be called after this method is executed. The first parameter will be null and the second parameter will contain an array of strings representing the entire data, each element representing a line including the separator character.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 716,
            "description": "Deletes all the chunks of this file in the database if mode was set to \"w\" or\n\"w+\" and resets the read/write head to the initial position.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 751,
            "description": "Retrieves the contents of this file and advances the read/write head. Works with Buffers only.\n\nThere are 3 signatures for this method:\n\n(callback)\n(length, callback)\n(length, buffer, callback)",
            "params": [
                {
                    "name": "length",
                    "description": "the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "buffer",
                    "description": "a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.",
                    "type": "String|Buffer",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method is executed. null will be passed to the first parameter and a string containing the contents of the buffer concatenated with the contents read from this file will be passed to the second.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 815,
            "description": "Retrieves the position of the read/write head of this file.",
            "params": [
                {
                    "name": "callback",
                    "description": "This gets called after this method terminates. null is passed to the first parameter and the position is passed to the second.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 826,
            "description": "Moves the read/write head to a new location.\n\nThere are 3 signatures for this method\n\nSeek Location Modes\n - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file.\n - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file.\n - **GridStore.IO_SEEK_END**, set the position from the end of the file.",
            "params": [
                {
                    "name": "position",
                    "description": "the position to seek to",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "seekLocation",
                    "description": "seek mode. Use one of the Seek Location modes.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 889,
            "description": "Verify if the file is at EOF.",
            "return": {
                "description": "true if the read/write head is at the end of this file.",
                "type": "Boolean"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 899,
            "description": "Retrieves a single character from this file.",
            "params": [
                {
                    "name": "callback",
                    "description": "this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 923,
            "description": "Writes a string to the file with a newline character appended at the end if\nthe given string does not have one.",
            "params": [
                {
                    "name": "string",
                    "description": "the string to write.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 937,
            "description": "Returns read stream based on this GridStore file\n\nEvents\n - **data** {function(item) {}} the data event triggers when a document is ready.\n - **end** {function() {}} the end event triggers when there is no more documents available.\n - **close** {function() {}} the close event triggers when the stream is closed.\n - **error** {function(err) {}} the error event triggers if an error happens.",
            "params": [
                {
                    "name": "autoclose",
                    "description": "if true current GridStore will be closed when EOF and 'close' event will be fired",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 954,
            "description": "The collection to be used for holding the files and chunks collection.",
            "classconstant": "DEFAULT_ROOT_COLLECTION",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 961,
            "description": "Default file mime type",
            "classconstant": "DEFAULT_CONTENT_TYPE",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 968,
            "description": "Seek mode where the given length is absolute.",
            "classconstant": "IO_SEEK_SET",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 975,
            "description": "Seek mode where the given length is an offset to the current read/write head.",
            "classconstant": "IO_SEEK_CUR",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 982,
            "description": "Seek mode where the given length is an offset to the end of the file.",
            "classconstant": "IO_SEEK_END",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 989,
            "description": "Checks if a file exists in the database.\n\nOptions\n - **readPreference** {String}, the prefered read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "db",
                    "description": "the database to query.",
                    "type": "Db"
                },
                {
                    "name": "name",
                    "description": "the name of the file to look for.",
                    "type": "String"
                },
                {
                    "name": "rootCollection",
                    "description": "the root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method executes. Passes null to the first and passes true to the second if the file exists and false otherwise.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1028,
            "description": "Gets the list of files stored in the GridFS.",
            "params": [
                {
                    "name": "db",
                    "description": "the database to query.",
                    "type": "Db"
                },
                {
                    "name": "rootCollection",
                    "description": "the root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method executes. Passes null to the first and passes an array of strings containing the names of the files.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1073,
            "description": "Reads the contents of a file.\n\nThis method has the following signatures\n\n(db, name, callback)\n(db, name, length, callback)\n(db, name, length, offset, callback)\n(db, name, length, offset, options, callback)",
            "params": [
                {
                    "name": "db",
                    "description": "the database to query.",
                    "type": "Db"
                },
                {
                    "name": "name",
                    "description": "the name of the file.",
                    "type": "String"
                },
                {
                    "name": "length",
                    "description": "the size of data to read.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "offset",
                    "description": "the offset from the head of the file of which to start reading from.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "the options for the file.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method executes. A string with an error message will be passed to the first parameter when the length and offset combination exceeds the length of the file while an Error object will be passed if other forms of error occured, otherwise, a string is passed. The second parameter will contain the data read if successful or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1117,
            "description": "Reads the data of this file.",
            "params": [
                {
                    "name": "db",
                    "description": "the database to query.",
                    "type": "Db"
                },
                {
                    "name": "name",
                    "description": "the name of the file.",
                    "type": "String"
                },
                {
                    "name": "separator",
                    "description": "the character to be recognized as the newline separator.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "file options.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after this method is executed. The first parameter will be null and the second parameter will contain an array of strings representing the entire data, each element representing a line including the separator character.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1141,
            "description": "Deletes the chunks and metadata information of a file from GridFS.",
            "params": [
                {
                    "name": "db",
                    "description": "the database to interact with.",
                    "type": "Db"
                },
                {
                    "name": "names",
                    "description": "the name/names of the files to delete.",
                    "type": "String|Array"
                },
                {
                    "name": "options",
                    "description": "the options for the files.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "callback": "{Function} this will be called after this method is executed. The first parameter will contain an Error object if an error occured or null otherwise. The second parameter will contain a reference to this object.",
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1187,
            "description": "Returns the current chunksize of the file.",
            "field": "chunkSize",
            "type": "{Number}",
            "getter": "",
            "setter": "",
            "itemtype": "property",
            "name": "return number of bytes in the current chunkSize.",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1209,
            "description": "The md5 checksum for this file.",
            "field": "md5",
            "type": "{Number}",
            "getter": "",
            "setter": "",
            "itemtype": "property",
            "name": "return this files md5 checksum.",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1224,
            "description": "GridStore Streaming methods\nHandles the correct return of the writeable stream status",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1242,
            "description": "Handles the correct return of the readable stream status",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1260,
            "description": "Handles the correct setting of encoding for the stream",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1266,
            "description": "Handles the end events",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1290,
            "description": "Handles the normal writes to gridstore",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1303,
            "description": "Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\".",
            "params": [
                {
                    "name": "data",
                    "description": "the data to write.",
                    "type": "String|Buffer"
                },
                {
                    "name": "close",
                    "description": "closes this file after writing if set to true.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1340,
            "description": "Handles the destroy part of a stream",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1355,
            "description": "Handles the destroySoon part of a stream",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1368,
            "description": "Handles the pipe part of the stream",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1388,
            "description": "Internal module methods",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1442,
            "description": "pause",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1451,
            "description": "resume",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1460,
            "description": "Internal module methods",
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1510,
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1522,
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1535,
            "ignore": "",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js",
            "line": 1566,
            "ignore": "",
            "api": "private",
            "class": "Represents the GridStore."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "line": 53,
            "description": "Inherit from Stream",
            "ignore": "",
            "api": "private",
            "class": "Represents a GridFS File Stream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "line": 60,
            "description": "Flag stating whether or not this stream is readable.",
            "class": "Represents a GridFS File Stream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "line": 65,
            "description": "Flag stating whether or not this stream is paused.",
            "class": "Represents a GridFS File Stream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "line": 70,
            "ignore": "",
            "api": "private",
            "class": "Represents a GridFS File Stream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "line": 162,
            "description": "Pauses this stream, then no farther events will be fired.",
            "ignore": "",
            "api": "public",
            "class": "Represents a GridFS File Stream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "line": 174,
            "description": "Destroys the stream, then no farther events will be fired.",
            "ignore": "",
            "api": "public",
            "class": "Represents a GridFS File Stream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js",
            "line": 188,
            "description": "Resumes this stream.",
            "ignore": "",
            "api": "public",
            "class": "Represents a GridFS File Stream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/responses/mongo_reply.js",
            "line": 7,
            "description": "Reply message from mongo db",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 19,
            "description": "Retrieve the server information for the current\ninstance of the db client",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from buildInfo or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 31,
            "description": "Retrieve the server information for the current\ninstance of the db client",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from serverInfo or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "private",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 46,
            "description": "Retrieve this db's server status.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from serverStatus or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 66,
            "description": "Retrieve the current profiling Level for MongoDB",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from profilingLevel or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 91,
            "description": "Ping the MongoDB server and retrieve results",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from ping or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 104,
            "description": "Authenticate against MongoDB",
            "params": [
                {
                    "name": "username",
                    "description": "The user name for the authentication.",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "The password for the authentication.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from authenticate or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 119,
            "description": "Logout current authenticated user",
            "params": [
                {
                    "name": "options",
                    "description": "Optional parameters to the command.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from logout or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 133,
            "description": "Add a user to the MongoDB server, if the user exists it will\noverwrite the current password\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "username",
                    "description": "The user name for the authentication.",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "The password for the authentication.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from addUser or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 161,
            "description": "Remove a user from the MongoDB server\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "username",
                    "description": "The user name for the authentication.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from removeUser or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 188,
            "description": "Set the current profiling level of MongoDB",
            "params": [
                {
                    "name": "level",
                    "description": "The new profiling level (off, slow_only, all)",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from setProfilingLevel or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 223,
            "description": "Retrive the current profiling information for MongoDB",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from profilingInfo or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 240,
            "description": "Execute a db command against the Admin database",
            "params": [
                {
                    "name": "command",
                    "description": "A command object `{ping:1}`.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Optional parameters to the command.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The command always return the whole result of the command as the second parameter.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 262,
            "description": "Validate an existing collection",
            "params": [
                {
                    "name": "collectionName",
                    "description": "The name of the collection to validate.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optional parameters to the command.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from validateCollection or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 303,
            "description": "List the available databases",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from listDatabases or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns no result",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 318,
            "description": "Get ReplicaSet status",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from replSetGetStatus or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/admin.js",
            "line": 337,
            "ignore": "",
            "class": "Represents the Admin methods of MongoDB."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 1,
            "description": "Module dependencies.",
            "ignore": "",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 72,
            "description": "Inserts a single document or a an array of documents into MongoDB.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **continueOnError/keepGoing** {Boolean, default:false}, keep inserting documents even if one document has an error, *mongodb 1.9.1 >*.\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **forceServerObjectId** {Boolean, default:false}, let server assign ObjectId instead of the driver\n - **checkKeys** {Boolean, default:true}, allows for disabling of document key checking (WARNING OPENS YOU UP TO INJECTION ATTACKS)\n - **fullResult** {Boolean, default:false}, returns the full result document (document returned will differ by server version)",
            "params": [
                {
                    "name": "docs",
                    "description": "",
                    "type": "Array|Object"
                },
                {
                    "name": "options",
                    "description": "optional options for insert command",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "optional callback for the function, must be provided when using a writeconcern",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Collection"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 94,
            "description": "Removes documents specified by `selector` from the db.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **single** {Boolean, default:false}, removes the first document found.\n - **fullResult** {Boolean, default:false}, returns the full result document (document returned will differ by server version)",
            "params": [
                {
                    "name": "selector",
                    "description": "optional select, no selector is equivalent to removing all documents.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "additional options during remove.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "must be provided if you performing a remove with a writeconcern",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 113,
            "description": "Renames the collection.\n\nOptions\n - **dropTarget** {Boolean, default:false}, drop the target name collection if it previously exists.",
            "params": [
                {
                    "name": "newName",
                    "description": "the new name of the collection.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "returns option results.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "the callback accepting the result",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 127,
            "description": "Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic\noperators and update instead for more efficient operations.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "doc",
                    "description": "the document to save",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "additional options during remove.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "must be provided if you performing an update with a writeconcern",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 145,
            "description": "Updates documents.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **upsert** {Boolean, default:false}, perform an upsert operation.\n - **multi** {Boolean, default:false}, update all documents matching the selector.\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **checkKeys** {Boolean, default:true}, allows for disabling of document key checking (WARNING OPENS YOU UP TO INJECTION ATTACKS)\n - **fullResult** {Boolean, default:false}, returns the full result document (document returned will differ by server version)",
            "params": [
                {
                    "name": "selector",
                    "description": "the query to select the document/documents to be updated",
                    "type": "Object"
                },
                {
                    "name": "document",
                    "description": "the fields/vals to be updated, or in the case of an upsert operation, inserted.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "must be provided if you performing an update with a writeconcern",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 168,
            "description": "The distinct command returns returns a list of distinct values for the given key across a collection.\n\nOptions\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "key",
                    "description": "key to run distinct against.",
                    "type": "String"
                },
                {
                    "name": "query",
                    "description": "option query to narrow the returned objects.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from distinct or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 183,
            "description": "Count number of matching documents in the db to a query.\n\nOptions\n - **skip** {Number}, The number of documents to skip for the count.\n - **limit** {Number}, The limit of documents to count.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "query",
                    "description": "query to filter by before performing count.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "additional options during count.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the count method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 199,
            "description": "Drop the collection",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the drop method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 210,
            "description": "Find and update a document.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **remove** {Boolean, default:false}, set to true to remove the object before returning.\n - **upsert** {Boolean, default:false}, perform an upsert operation.\n - **new** {Boolean, default:false}, set to true if you want to return the modified object rather than the original. Ignored for remove.",
            "params": [
                {
                    "name": "query",
                    "description": "query object to locate the object to modify",
                    "type": "Object"
                },
                {
                    "name": "sort",
                    "description": "- if multiple docs match, choose the first one in the specified sort order as the object to manipulate",
                    "type": "Array"
                },
                {
                    "name": "doc",
                    "description": "- the fields/vals to be updated",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the findAndModify method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 232,
            "description": "Find and remove a document\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "query",
                    "description": "query object to locate the object to modify",
                    "type": "Object"
                },
                {
                    "name": "sort",
                    "description": "- if multiple docs match, choose the first one in the specified sort order as the object to manipulate",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the findAndRemove method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 250,
            "description": "Creates a cursor for a query that can be used to iterate over results from MongoDB\n\nVarious argument possibilities\n - callback?\n - selector, callback?,\n - selector, fields, callback?\n - selector, options, callback?\n - selector, fields, options, callback?\n - selector, fields, skip, limit, callback?\n - selector, fields, skip, limit, timeout, callback?\n\nOptions\n - **limit** {Number, default:0}, sets the limit of documents returned in the query.\n - **sort** {Array | Object}, set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n - **fields** {Object}, the fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n - **skip** {Number, default:0}, set to skip N documents ahead in your query (useful for pagination).\n - **hint** {Object}, tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n - **explain** {Boolean, default:false}, explain the query instead of returning the data.\n - **snapshot** {Boolean, default:false}, snapshot query.\n - **timeout** {Boolean, default:false}, specify if the cursor can timeout.\n - **tailable** {Boolean, default:false}, specify if the cursor is tailable.\n - **tailableRetryInterval** {Number, default:100}, specify the miliseconds between getMores on tailable cursor.\n - **numberOfRetries** {Number, default:5}, specify the number of times to retry the tailable cursor.\n - **awaitdata** {Boolean, default:false} allow the cursor to wait for data, only applicable for tailable cursor.\n - **oplogReplay** {Boolean, default:false} sets an internal flag, only applicable for tailable cursor.\n - **exhaust** {Boolean, default:false} have the server send all the documents at once as getMore packets, not recommended.\n - **batchSize** {Number, default:0}, set the batchSize for the getMoreCommand when iterating over the query results.\n - **returnKey** {Boolean, default:false}, only return the index key.\n - **maxScan** {Number}, Limit the number of items to scan.\n - **min** {Number}, Set index bounds.\n - **max** {Number}, Set index bounds.\n - **showDiskLoc** {Boolean, default:false}, Show disk location of results.\n - **comment** {String}, You can put a $comment field on a query to make looking in the profiler logs simpler.\n - **raw** {Boolean, default:false}, Return all BSON documents as Raw Buffer documents.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **numberOfRetries** {Number, default:5}, if using awaidata specifies the number of times to retry on timeout.\n - **partial** {Boolean, default:false}, specify if the cursor should return partial results when querying against a sharded system\n - **maxTimeMS** {Number}, number of miliseconds to wait before aborting the query.",
            "params": [
                {
                    "name": "query",
                    "description": "query object to locate the object to modify",
                    "type": "Object|ObjectID"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the find method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "returns a cursor to the query",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 298,
            "description": "Finds a single document based on the query\n\nVarious argument possibilities\n - callback?\n - selector, callback?,\n - selector, fields, callback?\n - selector, options, callback?\n - selector, fields, options, callback?\n - selector, fields, skip, limit, callback?\n - selector, fields, skip, limit, timeout, callback?\n\nOptions\n - **limit** {Number, default:0}, sets the limit of documents returned in the query.\n - **sort** {Array | Object}, set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n - **fields** {Object}, the fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n - **skip** {Number, default:0}, set to skip N documents ahead in your query (useful for pagination).\n - **hint** {Object}, tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n - **explain** {Boolean, default:false}, explain the query instead of returning the data.\n - **snapshot** {Boolean, default:false}, snapshot query.\n - **timeout** {Boolean, default:false}, specify if the cursor can timeout.\n - **tailable** {Boolean, default:false}, specify if the cursor is tailable.\n - **batchSize** {Number, default:0}, set the batchSize for the getMoreCommand when iterating over the query results.\n - **returnKey** {Boolean, default:false}, only return the index key.\n - **maxScan** {Number}, Limit the number of items to scan.\n - **min** {Number}, Set index bounds.\n - **max** {Number}, Set index bounds.\n - **showDiskLoc** {Boolean, default:false}, Show disk location of results.\n - **comment** {String}, You can put a $comment field on a query to make looking in the profiler logs simpler.\n - **raw** {Boolean, default:false}, Return all BSON documents as Raw Buffer documents.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **partial** {Boolean, default:false}, specify if the cursor should return partial results when querying against a sharded system\n - **maxTimeMS** {Number}, number of miliseconds to wait before aborting the query.",
            "params": [
                {
                    "name": "query",
                    "description": "query object to locate the object to modify",
                    "type": "Object|ObjectID"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the findOne method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "returns a cursor to the query",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 340,
            "description": "Creates an index on the collection.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **unique** {Boolean, default:false}, creates an unique index.\n - **sparse** {Boolean, default:false}, creates a sparse index.\n - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n - **v** {Number}, specify the format version of the indexes.\n - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)",
            "params": [
                {
                    "name": "fieldOrSpec",
                    "description": "fieldOrSpec that defines the index.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the createIndex method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 365,
            "description": "Ensures that an index exists, if it does not it creates it\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **unique** {Boolean, default:false}, creates an unique index.\n - **sparse** {Boolean, default:false}, creates a sparse index.\n - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n - **v** {Number}, specify the format version of the indexes.\n - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)",
            "params": [
                {
                    "name": "fieldOrSpec",
                    "description": "fieldOrSpec that defines the index.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the ensureIndex method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 390,
            "description": "Retrieves this collections index info.\n\nOptions\n - **full** {Boolean, default:false}, returns the full raw index information.",
            "params": [
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the indexInformation method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 403,
            "description": "Drops an index from this collection.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the dropIndex method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 420,
            "description": "Drops all indexes from this collection.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the dropAllIndexes method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 429,
            "description": "Drops all indexes from this collection.",
            "deprecated": true,
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the dropIndexes method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "private",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 439,
            "description": "Reindex all indexes on the collection\nWarning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the reIndex method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 456,
            "description": "Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n\nOptions\n - **out** {Object}, sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*\n - **query** {Object}, query filter object.\n - **sort** {Object}, sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n - **limit** {Number}, number of objects to return from collection.\n - **keeptemp** {Boolean, default:false}, keep temporary data.\n - **finalize** {Function | String}, finalize function.\n - **scope** {Object}, can pass in variables that can be access from map/reduce/finalize.\n - **jsMode** {Boolean, default:false}, it is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\n - **verbose** {Boolean, default:false}, provide statistics on job execution time.\n - **readPreference** {String, only for inline results}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "map",
                    "description": "the mapping function.",
                    "type": "Function|String"
                },
                {
                    "name": "reduce",
                    "description": "the reduce function.",
                    "type": "Function|String"
                },
                {
                    "name": "options",
                    "description": "options for the map reduce job.",
                    "type": "Objects",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the mapReduce method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 480,
            "description": "Run a group command across a collection\n\nOptions\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "keys",
                    "description": "an object, array or function expressing the keys to group by.",
                    "type": "Object|Array|Function|Code"
                },
                {
                    "name": "condition",
                    "description": "an optional condition that must be true for a row to be considered.",
                    "type": "Object"
                },
                {
                    "name": "initial",
                    "description": "initial value of the aggregation counter object.",
                    "type": "Object"
                },
                {
                    "name": "reduce",
                    "description": "the reduce function aggregates (reduces) the objects iterated",
                    "type": "Function|Code"
                },
                {
                    "name": "finalize",
                    "description": "an optional function to be run on each item in the result set just before the item is returned.",
                    "type": "Function|Code"
                },
                {
                    "name": "command",
                    "description": "specify if you wish to run using the internal group command or using eval, default is true.",
                    "type": "Boolean"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the group method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 499,
            "description": "Returns the options of the collection.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the options method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 508,
            "description": "Returns if the collection is a capped collection",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the isCapped method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 517,
            "description": "Checks if one or more indexes exist on the collection",
            "params": [
                {
                    "name": "indexNames",
                    "description": "check if one or more indexes exist on the collection.",
                    "type": "String|Array"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the indexExists method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 527,
            "description": "Execute the geoNear command to search for items in the collection\n\nOptions\n - **num** {Number}, max number of results to return.\n - **minDistance** {Number}, include results starting at minDistance from a point (2.6 or higher)\n - **maxDistance** {Number}, include results up to maxDistance from the point.\n - **distanceMultiplier** {Number}, include a value to multiply the distances with allowing for range conversions.\n - **query** {Object}, filter the results by a query.\n - **spherical** {Boolean, default:false}, perform query using a spherical model.\n - **uniqueDocs** {Boolean, default:false}, the closest location in a document to the center of the search region will always be returned MongoDB > 2.X.\n - **includeLocs** {Boolean, default:false}, include the location data fields in the top level of the results MongoDB > 2.X.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "x",
                    "description": "point to search on the x axis, ensure the indexes are ordered in the same order.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "point to search on the y axis, ensure the indexes are ordered in the same order.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "options for the map reduce job.",
                    "type": "Objects",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the geoNear method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 550,
            "description": "Execute a geo search using a geo haystack index on a collection.\n\nOptions\n - **maxDistance** {Number}, include results up to maxDistance from the point.\n - **search** {Object}, filter the results by a query.\n - **limit** {Number}, max number of results to return.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "x",
                    "description": "point to search on the x axis, ensure the indexes are ordered in the same order.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "point to search on the y axis, ensure the indexes are ordered in the same order.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "options for the map reduce job.",
                    "type": "Objects",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the geoHaystackSearch method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 568,
            "description": "Retrieve all the indexes on the collection.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the indexes method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 579,
            "description": "Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\n\nOptions\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **cursor** {Object}, return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n - **cursor.batchSize** {Number}, the batchSize for the cursor\n - **out** {String}, the collection name to where to write the results from the aggregation (MongoDB 2.6 or higher). Warning any existing collection will be overwritten.\n - **explain** {Boolean, default:false}, explain returns the aggregation execution plan (requires mongodb 2.6 >).\n - **allowDiskUse** {Boolean, default:false}, allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).",
            "params": [
                {
                    "name": "array",
                    "description": "containing all the aggregation framework commands for the execution.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the aggregate method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 598,
            "description": "Get all the collection statistics.\n\nOptions\n - **scale** {Number}, divide the returned sizes by scale value.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "options",
                    "description": "options for the stats command.",
                    "type": "Objects",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the stats method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 612,
            "description": "Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "options",
                    "description": "options for the initializeUnorderedBatch",
                    "type": "Objects",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. The second argument will be a UnorderedBulkOperation object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "UnorderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 628,
            "description": "Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "options",
                    "description": "options for the initializeOrderedBulkOp",
                    "type": "Objects",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. The second argument will be a OrderedBulkOperation object.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 644,
            "description": "Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\nno ordering guarantees for returned results.\n\nOptions\n - **readPreference** {String}, the prefered read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **batchSize** {Number, default:0}, set the batchSize for the getMoreCommand when iterating over the query results.\n - **numCursors**, {Number, 1} the maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)",
            "params": [
                {
                    "name": "options",
                    "description": "options for the initializeOrderedBulkOp",
                    "type": "Objects",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. The second argument will be an array of CommandCursor instances.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "OrderedBulkOperation"
            },
            "api": "public",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 660,
            "ignore": "",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/collection.js",
            "line": 673,
            "description": "Expose.",
            "class": "Represents a Collection"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 108,
            "description": "Clones a given cursor but uses new options",
            "params": [
                {
                    "name": "cursor",
                    "description": "the cursor to clone.",
                    "type": "Cursor"
                }
            ],
            "return": {
                "description": "[options] additional options for the collection when cloning.",
                "type": "Object"
            },
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 117,
            "description": "Resets this cursor to its initial state. All settings like the query string,\ntailable, batchSizeValue, skipValue and limits are preserved.",
            "return": {
                "description": "returns itself with rewind applied.",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 144,
            "description": "Returns an array of documents. The caller is responsible for making sure that there\nis enough memory to store the results. Note that the array only contain partial\nresults when this cursor had been previouly accessed. In that case,\ncursor.rewind() can be used to reset the cursor.",
            "params": [
                {
                    "name": "callback",
                    "description": "This will be called after executing this method successfully. The first parameter will contain the Error object if an error occured, or null otherwise. The second parameter will contain an array of BSON deserialized objects as a result of the query.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 220,
            "description": "Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\nnot all of the elements will be iterated if this cursor had been previouly accessed.\nIn that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n**{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\nat any given time if batch size is specified. Otherwise, the caller is responsible\nfor making sure that the entire result can fit the memory.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called for while iterating every document of the query result. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the document.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 303,
            "description": "Determines how many result the query for this cursor will return",
            "params": [
                {
                    "name": "applySkipLimit",
                    "description": "if set to true will apply the skip and limits set on the cursor. Defaults to false.",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the number of results or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 332,
            "description": "Sets the sort parameter of this cursor to the given value.\n\nThis method has the following method signatures:\n(keyOrList, callback)\n(keyOrList, direction, callback)",
            "params": [
                {
                    "name": "keyOrList",
                    "description": "This can be a string or an array. If passed as a string, the string will be the field to sort. If passed an array, each element will represent a field to be sorted and should be an array that contains the format [string, direction].",
                    "type": "String|Array|Object"
                },
                {
                    "name": "direction",
                    "description": "this determines how the results are sorted. \"asc\", \"ascending\" or 1 for asceding order while \"desc\", \"desceding or -1 for descending order. Note that the strings are case insensitive.",
                    "type": "String|Number"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain an error object when the cursor is already closed while the second parameter will contain a reference to this object upon successful execution.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "an instance of this object.",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 366,
            "description": "Sets the limit parameter of this cursor to the given value.",
            "params": [
                {
                    "name": "limit",
                    "description": "the new limit.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "this optional callback will be called after executing this method. The first parameter will contain an error object when the limit given is not a valid number or when the cursor is already closed while the second parameter will contain a reference to this object upon successful execution.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "an instance of this object.",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 403,
            "description": "Specifies a time limit for a query operation. After the specified\ntime is exceeded, the operation will be aborted and an error will be\nreturned to the client. If maxTimeMS is null, no limit is applied.",
            "params": [
                {
                    "name": "maxTimeMS",
                    "description": "the maxTimeMS for the query.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "this optional callback will be called after executing this method. The first parameter will contain an error object when the limit given is not a valid number or when the cursor is already closed while the second parameter will contain a reference to this object upon successful execution.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "an instance of this object.",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 424,
            "description": "Sets the read preference for the cursor",
            "params": [
                {
                    "name": "the",
                    "description": "read preference for the cursor, one of Server.READ_PRIMARY, Server.READ_SECONDARY, Server.READ_SECONDARY_ONLY",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "this optional callback will be called after executing this method. The first parameter will contain an error object when the read preference given is not a valid number or when the cursor is already closed while the second parameter will contain a reference to this object upon successful execution.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "an instance of this object.",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 453,
            "description": "Sets the skip parameter of this cursor to the given value.",
            "params": [
                {
                    "name": "skip",
                    "description": "the new skip value.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "this optional callback will be called after executing this method. The first parameter will contain an error object when the skip value given is not a valid number or when the cursor is already closed while the second parameter will contain a reference to this object upon successful execution.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "an instance of this object.",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 480,
            "description": "Sets the batch size parameter of this cursor to the given value.",
            "params": [
                {
                    "name": "batchSize",
                    "description": "the new batch size.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "this optional callback will be called after executing this method. The first parameter will contain an error object when the batchSize given is not a valid number or when the cursor is already closed while the second parameter will contain a reference to this object upon successful execution.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "an instance of this object.",
                "type": "Cursor"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 509,
            "description": "The limit used for the getMore command",
            "return": {
                "description": "The number of records to request per batch.",
                "type": "Number"
            },
            "ignore": "",
            "api": "private",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 533,
            "description": "Generates a QueryCommand object using the parameters of this cursor.",
            "return": {
                "description": "The command object",
                "type": "QueryCommand"
            },
            "ignore": "",
            "api": "private",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 633,
            "return": {
                "description": "Returns an object containing the sort value of this cursor with\n    the proper formatting that can be used internally in this cursor.",
                "type": "Object"
            },
            "ignore": "",
            "api": "private",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 643,
            "description": "Converts the value of the sort direction into its equivalent numerical value.",
            "params": [
                {
                    "name": "sortDirection",
                    "description": "Range of acceptable values:\n    'ascending', 'descending', 'asc', 'desc', 1, -1",
                    "type": "String|number"
                }
            ],
            "return": {
                "description": "The equivalent numerical value",
                "type": "Number"
            },
            "throws": {
                "description": "Error if the given sortDirection is invalid"
            },
            "ignore": "",
            "api": "private",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 658,
            "description": "Gets the next document from the cursor.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain an error object on error while the second parameter will contain a document from the returned result or null if there are no more results.",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 762,
            "description": "Gets more results from the database if any.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain an error object on error while the second parameter will contain a document from the returned result or null if there are no more results.",
                    "type": "Function"
                }
            ],
            "ignore": "",
            "api": "private",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 902,
            "description": "Gets a detailed information about how the query is performed on this cursor and how\nlong it took the database to process it.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will always be null while the second parameter will be an object containing the details.",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 949,
            "description": "Returns a Node Transform Stream interface for this cursor.\n\nOptions\n - **transform** {Function} function of type function(object) { return transformed }, allows for transformation of data before emitting.",
            "return": {
                "description": "returns a stream object.",
                "type": "CursorStream"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 962,
            "description": "Close the cursor.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will always contain null while the second parameter will contain a reference to this cursor.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 996,
            "description": "Check if the cursor is closed or open.",
            "return": {
                "description": "returns the state of the cursor.",
                "type": "Boolean"
            },
            "api": "public",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 1006,
            "description": "Init state",
            "classconstant": "INIT",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 1013,
            "description": "Cursor open",
            "classconstant": "OPEN",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 1020,
            "description": "Cursor closed",
            "classconstant": "CLOSED",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 1027,
            "description": "Cursor performing a get more",
            "classconstant": "OPEN",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursor.js",
            "line": 1034,
            "ignore": "",
            "api": "private",
            "class": "Represents a Cursor."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 6,
            "description": "Module dependecies.",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 47,
            "description": "Inherit from Stream",
            "ignore": "",
            "api": "private",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 54,
            "description": "Flag stating whether or not this stream is readable.",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 59,
            "description": "Flag stating whether or not this stream is paused.",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 64,
            "description": "Initialize the cursor.",
            "ignore": "",
            "api": "private",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 74,
            "description": "Pull the next document from the cursor.",
            "ignore": "",
            "api": "private",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 93,
            "description": "Handle each document as its returned from the cursor.",
            "ignore": "",
            "api": "private",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 115,
            "description": "Pauses the stream.",
            "api": "public",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 124,
            "description": "Resumes the stream.",
            "api": "public",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/cursorstream.js",
            "line": 143,
            "description": "Destroys the stream, closing the underlying\ncursor. No more events will be emitted.",
            "api": "public",
            "class": "Represents a CursorStream."
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1,
            "description": "Module dependencies.",
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 224,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 238,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 243,
            "description": "Initialize the database connection.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the index information or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 312,
            "description": "Create a new Db instance sharing the current socket connections.",
            "params": [
                {
                    "name": "dbName",
                    "description": "the name of the database we want to use.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a db instance using the new database.",
                "type": "Db"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 340,
            "description": "Close the current db connection, including all the child db instances. Emits close event and calls optional callback.",
            "params": [
                {
                    "name": "forceClose",
                    "description": "connection can never be reused.",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 367,
            "description": "Access the Admin database",
            "params": [
                {
                    "name": "callback",
                    "description": "returns the results.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "the admin db object.",
                "type": "Admin"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 379,
            "description": "DEPRECATED: Returns a cursor to all the collection information. Does not work with 2.8 or higher when using\nother storage engines",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the collection name we wish to retrieve the information from.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the options or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "deprecated": true,
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 405,
            "description": "Get the list of all collection names for the specified db\n\nOptions\n - **namesOnly** {String, default:false}, Return only the full collection namespace.\n - **filter** {String|Object, default:null}, Filter collections by this filter (string or object)",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the collection name we wish to filter by.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the collection names or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 485,
            "description": "Get the list of all collection names for the specified db\n\nOptions\n - **namesOnly** {String, default:false}, Return only the full collection namespace.",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the collection name we wish to filter by.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the collection names or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 502,
            "description": "Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\ncan use it without a callback in the following way. var collection = db.collection('mycollection');\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **raw** {Boolean, default:false}, perform all operations using raw bson objects.\n - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **strict**, (Boolean, default:false) returns an error if the collection does not exist",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the collection name we wish to access.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "returns option results.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the collection or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 556,
            "description": "Fetch all collections for the current db.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the collections or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 577,
            "description": "Evaluate javascript on the server\n\nOptions\n - **nolock** {Boolean, default:false}, Tell MongoDB not to block on the evaulation of the javascript.",
            "params": [
                {
                    "name": "code",
                    "description": "javascript to execute on server.",
                    "type": "Code"
                },
                {
                    "name": "parameters",
                    "description": "the parameters for the call.",
                    "type": "Object|Array",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "the options",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from eval or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 630,
            "description": "Dereference a dbref, against a db",
            "params": [
                {
                    "name": "dbRef",
                    "description": "db reference object we wish to resolve.",
                    "type": "DBRef"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from dereference or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 649,
            "description": "Logout user from server, fire off on all connections and remove all auth info",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from logout or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 687,
            "description": "Authenticate a user against the server.\nauthMechanism\nOptions\n - **authMechanism** {String, default:MONGODB-CR}, The authentication mechanism to use, GSSAPI or MONGODB-CR",
            "params": [
                {
                    "name": "username",
                    "description": "username.",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "password.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "the options",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from authentication or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 776,
            "description": "Add a user to the database.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **customData**, (Object, default:{}) custom data associated with the user (only Mongodb 2.6 or higher)\n - **roles**, (Array, default:[]) roles associated with the created user (only Mongodb 2.6 or higher)",
            "params": [
                {
                    "name": "username",
                    "description": "username.",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "password.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from addUser or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 846,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 922,
            "description": "Remove a user from a database\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "params": [
                {
                    "name": "username",
                    "description": "username.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from removeUser or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1005,
            "description": "Creates a collection on a server pre-allocating space, need to create f.ex capped collections.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **raw** {Boolean, default:false}, perform all operations using raw bson objects.\n - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n - **capped** {Boolean, default:false}, create a capped collection.\n - **size** {Number}, the size of the capped collection in bytes.\n - **max** {Number}, the maximum number of documents in the capped collection.\n - **autoIndexId** {Boolean, default:true}, create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version < 2.2.\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **strict**, (Boolean, default:false) throws an error if collection already exists",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the collection name we wish to access.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "returns option results.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from createCollection or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1077,
            "description": "Execute a command hash against MongoDB. This lets you acess any commands not available through the api on the server.\n\nOptions\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **maxTimeMS** {Number}, number of milliseconds to wait before aborting the query.\n - **ignoreCommandFilter** {Boolean}, overrides the default redirection of certain commands to primary.\n - **writeCommand** {Boolean, default: false}, signals this is a write command and to ignore read preferences\n - **checkKeys** {Boolean, default: false}, overrides the default not to check the key names for the command",
            "params": [
                {
                    "name": "selector",
                    "description": "the command hash to send to the server, ex: {ping:1}.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options for the command.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The command always return the whole result of the command as the second parameter.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1188,
            "description": "Drop a collection from the database, removing it permanently. New accesses will create a new collection.",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the name of the collection we wish to drop.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from dropCollection or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1211,
            "description": "Rename a collection.\n\nOptions\n - **dropTarget** {Boolean, default:false}, drop the target name collection if it previously exists.",
            "params": [
                {
                    "name": "fromCollection",
                    "description": "the name of the current collection we wish to rename.",
                    "type": "String"
                },
                {
                    "name": "toCollection",
                    "description": "the new name of the collection.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "returns option results.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from renameCollection or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1239,
            "description": "Runs a command on the database.",
            "ignore": "",
            "api": "private",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1251,
            "description": "Runs a command on the database as admin.",
            "ignore": "",
            "api": "private",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1271,
            "description": "Creates an index on the collection.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **unique** {Boolean, default:false}, creates an unique index.\n - **sparse** {Boolean, default:false}, creates a sparse index.\n - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n - **v** {Number}, specify the format version of the indexes.\n - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)",
            "params": [
                {
                    "name": "collectionName",
                    "description": "name of the collection to create the index on.",
                    "type": "String"
                },
                {
                    "name": "fieldOrSpec",
                    "description": "fieldOrSpec that defines the index.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from createIndex or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1438,
            "description": "Ensures that an index exists, if it does not it creates it\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **unique** {Boolean, default:false}, creates an unique index.\n - **sparse** {Boolean, default:false}, creates a sparse index.\n - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n - **v** {Number}, specify the format version of the indexes.\n - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)",
            "params": [
                {
                    "name": "collectionName",
                    "description": "name of the collection to create the index on.",
                    "type": "String"
                },
                {
                    "name": "fieldOrSpec",
                    "description": "fieldOrSpec that defines the index.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from ensureIndex or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1495,
            "description": "Returns the information available on allocated cursors.\n\nOptions\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "params": [
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from cursorInfo or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1521,
            "description": "Drop an index on a collection.",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the name of the collection where the command will drop an index.",
                    "type": "String"
                },
                {
                    "name": "indexName",
                    "description": "name of the index to drop.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from dropIndex or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1546,
            "description": "Reindex all indexes on the collection\nWarning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the name of the collection.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from reIndex or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1571,
            "description": "Retrieves this collections index info.\n\nOptions\n - **full** {Boolean, default:false}, returns the full raw index information.\n - **readPreference** {String}, the preferred read preference ((Server.PRIMARY, Server.PRIMARY_PREFERRED, Server.SECONDARY, Server.SECONDARY_PREFERRED, Server.NEAREST).",
            "params": [
                {
                    "name": "collectionName",
                    "description": "the name of the collection.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "additional options during update.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from indexInformation or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1649,
            "description": "Drop a database.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from dropDatabase or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1673,
            "description": "Get all the db statistics.\n\nOptions\n - **scale** {Number}, divide the returned sizes by scale value.\n - **readPreference** {String}, the preferred read preference ((Server.PRIMARY, Server.PRIMARY_PREFERRED, Server.SECONDARY, Server.SECONDARY_PREFERRED, Server.NEAREST).",
            "params": [
                {
                    "name": "options",
                    "description": "options for the stats command",
                    "type": "Objects",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from stats or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1703,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1715,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1829,
            "description": "Execute db query command (not safe)",
            "ignore": "",
            "api": "private",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1924,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 1984,
            "description": "Execute an insert Command",
            "ignore": "",
            "api": "private",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2044,
            "description": "Update command is the same",
            "ignore": "",
            "api": "private",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2050,
            "description": "Remove command is the same",
            "ignore": "",
            "api": "private",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2057,
            "description": "Wrap a Mongo error document into an Error instance.\nDeprecated. Use utils.toError instead.",
            "ignore": "",
            "api": "private",
            "deprecated": true,
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2067,
            "description": "Default URL",
            "classconstant": "DEFAULT_URL",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2074,
            "description": "Connect to MongoDB using a url as documented at\n\n docs.mongodb.org/manual/reference/connection-string/\n\nOptions\n - **uri_decode_auth** {Boolean, default:false} uri decode the user name and password for authentication\n - **db** {Object, default: null} a hash off options to set on the db object, see **Db constructor**\n - **server** {Object, default: null} a hash off options to set on the server objects, see **Server** constructor**\n - **replSet** {Object, default: null} a hash off options to set on the replSet object, see **ReplSet** constructor**\n - **mongos** {Object, default: null} a hash off options to set on the mongos object, see **Mongos** constructor**",
            "params": [
                {
                    "name": "url",
                    "description": "connection url for MongoDB.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "optional options for insert command",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the db instance or null if an error occurred.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2111,
            "description": "State of the db connection",
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2121,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2133,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2146,
            "ignore": "",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2175,
            "description": "Legacy support",
            "ignore": "",
            "api": "private",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/db.js",
            "line": 2184,
            "description": "Remove all listeners to the db instance.",
            "ignore": "",
            "api": "private",
            "class": "Represents a Db"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "line": 46,
            "ignore": "",
            "class": "Represents a MongoClient"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "line": 51,
            "description": "Connect to MongoDB using a url as documented at\n\n docs.mongodb.org/manual/reference/connection-string/\n\nOptions\n - **uri_decode_auth** {Boolean, default:false} uri decode the user name and password for authentication\n - **db** {Object, default: null} a hash off options to set on the db object, see **Db constructor**\n - **server** {Object, default: null} a hash off options to set on the server objects, see **Server** constructor**\n - **replSet** {Object, default: null} a hash off options to set on the replSet object, see **ReplSet** constructor**\n - **mongos** {Object, default: null} a hash off options to set on the mongos object, see **Mongos** constructor**",
            "params": [
                {
                    "name": "url",
                    "description": "connection url for MongoDB.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "optional options for insert command",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the initialized db object or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a MongoClient"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "line": 87,
            "description": "Initialize the database connection.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the connected mongoclient or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a MongoClient"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "line": 107,
            "description": "Close the current db connection, including all the child db instances. Emits close event and calls optional callback.",
            "params": [
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from the close method or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a MongoClient"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "line": 118,
            "description": "Create a new Db instance sharing the current socket connections.",
            "params": [
                {
                    "name": "dbName",
                    "description": "the name of the database we want to use.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a db instance using the new database.",
                "type": "Db"
            },
            "api": "public",
            "class": "Represents a MongoClient"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/mongo_client.js",
            "line": 129,
            "description": "Connect to MongoDB using a url as documented at\n\n docs.mongodb.org/manual/reference/connection-string/\n\nOptions\n - **uri_decode_auth** {Boolean, default:false} uri decode the user name and password for authentication\n - **db** {Object, default: null} a hash off options to set on the db object, see **Db constructor**\n - **server** {Object, default: null} a hash off options to set on the server objects, see **Server** constructor**\n - **replSet** {Object, default: null} a hash off options to set on the replSet object, see **ReplSet** constructor**\n - **mongos** {Object, default: null} a hash off options to set on the mongos object, see **Mongos** constructor**",
            "params": [
                {
                    "name": "url",
                    "description": "connection url for MongoDB.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "optional options for insert command",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the initialized db object or null if an error occured.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Null"
            },
            "api": "public",
            "class": "Represents a MongoClient"
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 3,
            "description": "Sort functions, Normalize and prepare sort parameters",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 82,
            "description": "Context insensitive type checks",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 105,
            "description": "Wrap a Mongo error document in an Error instance",
            "ignore": "",
            "api": "private",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 130,
            "description": "Convert a single level object to an array",
            "ignore": "",
            "api": "private",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 145,
            "description": "Handle single command document return",
            "ignore": "",
            "api": "private",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 166,
            "description": "Return correct processor",
            "ignore": "",
            "api": "private",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 178,
            "description": "Allow setting the socketTimeoutMS on all connections\nto work around issues such as secondaries blocking due to compaction",
            "ignore": "",
            "api": "private",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 202,
            "description": "Determine if the server supports write commands",
            "ignore": "",
            "api": "private",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 212,
            "description": "Fetch server capabilities",
            "ignore": "",
            "api": "private",
            "class": ""
        },
        {
            "file": "bin/node_modules/mongodb/lib/mongodb/utils.js",
            "line": 222,
            "description": "Create index name based on field spec",
            "ignore": "",
            "api": "private",
            "class": ""
        },
        {
            "file": "bin/node_modules/open/lib/open.js",
            "line": 6,
            "description": "open a file or uri using the default application for the file type.",
            "return": {
                "description": "- the child process object.",
                "type": "ChildProcess"
            },
            "params": [
                {
                    "name": "target",
                    "description": "- the file/uri to open.",
                    "type": "String"
                },
                {
                    "name": "appName",
                    "description": "- (optional) the application to be used to open the\n     file (for example, \"chrome\", \"firefox\")",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- called with null on success, or\n     an error object that contains a property 'code' with the exit\n     code of the process.",
                    "type": "Function(Error)"
                }
            ],
            "class": ""
        },
        {
            "file": "bin/node_modules/prometheus-business-layer/biz-layer-jsonrpc-server.js",
            "line": 10,
            "description": "POŁĄCZNIE Z WARSTWĄ WEBOWĄ",
            "class": "",
            "module": "association"
        },
        {
            "file": "bin/node_modules/prometheus-field-type/field-type.js",
            "line": 12,
            "description": "Whether a given value can be stored in this field type instance",
            "memberof": "FieldType",
            "abstract": "",
            "params": [
                {
                    "name": "value",
                    "description": "value of this variable will be tested for compatibility with this field",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "",
            "module": "database-accessor"
        },
        {
            "file": "bin/node_modules/prometheus-field-type-manager/types/association.js",
            "line": 21,
            "description": "implements @link FieldType~isProperValue",
            "override": "",
            "this": "{Association}",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "",
            "module": "database-accessor"
        },
        {
            "file": "bin/node_modules/prometheus-field-type-manager/field-type-manager.js",
            "line": 9,
            "description": "Stores and manages Field Types",
            "class": "",
            "module": "field-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-manager/resource-manager.js",
            "line": 30,
            "description": "Calls callback function with `true` if a resource with given ID exists in the database. Otherwise,",
            "params": [
                {
                    "name": "prometheus_id",
                    "description": "the id to test for",
                    "type": "Number"
                },
                {
                    "name": "type",
                    "description": "type of the resource. If provided, callback value will be true only if a resource with a given id AND of a provided type exists",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "ResourceManager~idExistsCallback"
                }
            ],
            "class": "",
            "module": "field-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-manager/resource-manager.js",
            "line": 57,
            "description": "Callback for idExists",
            "callback": "ResourceManager~idExistsCallback",
            "params": [
                {
                    "name": "exists",
                    "description": "- true if a resource with given id exists",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "field-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-type/resource-type.js",
            "line": 29,
            "description": "Adds a field to the ResourceType instance",
            "name": "ResourceType#addField",
            "params": [
                {
                    "name": "field_object",
                    "description": "the field to append to ResourceType Description",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "field-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-type/resource-type.js",
            "line": 41,
            "description": "Checks if given field_values can be stored in this Resource Type",
            "name": "ResourceType#validateFieldValues",
            "params": [
                {
                    "name": "field_values",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "resolved if field values are valid, rejected otherwise",
                "type": "Promise"
            },
            "class": "",
            "module": "field-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-type-field/resource-type-field.js",
            "line": 12,
            "description": "Shorthand for ResourceTypeField.type.isProperValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "",
            "module": "field-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js",
            "line": 18,
            "description": "Throws an error if a resource type of given name has not been registered",
            "params": [
                {
                    "name": "type_name",
                    "description": "the name of the resource type to check for existance of",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js",
            "line": 29,
            "description": "Creates a new resource type",
            "params": [
                {
                    "name": "resource_type_name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fields",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js",
            "line": 44,
            "description": "Get a resource type object by name",
            "params": [
                {
                    "name": "resource_type_name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ResourceType|null"
            },
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js",
            "line": 53,
            "description": "Whether a resource type by given name has already been registered",
            "params": [
                {
                    "name": "resource_type_name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/promise/lib/core.js",
            "line": 82,
            "description": "Take a potentially misbehaving resolver function and make sure\nonFulfilled and onRejected are only called once.\n\nMakes no guarantees about asynchrony.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 9,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 15,
            "description": "Client constructor.",
            "params": [
                {
                    "name": "server",
                    "description": "instance",
                    "type": "Server"
                },
                {
                    "name": "connection",
                    "description": "",
                    "type": "Socket"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 36,
            "description": "Sets up event listeners.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 51,
            "description": "Connects a client to a namespace.",
            "params": [
                {
                    "name": "namespace",
                    "description": "name",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 82,
            "description": "Disconnects from all namespaces and closes transport.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 98,
            "description": "Removes a socket. Called by each `Socket`.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 115,
            "description": "Closes the underlying connection.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 129,
            "description": "Writes a packet to the transport.",
            "params": [
                {
                    "name": "packet",
                    "description": "object",
                    "type": "Object"
                },
                {
                    "name": "whether",
                    "description": "packet is already encoded",
                    "type": "Boolean"
                },
                {
                    "name": "whether",
                    "description": "packet is volatile",
                    "type": "Boolean"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 163,
            "description": "Called with incoming transport data.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 173,
            "description": "Called when parser fully decodes a packet.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 192,
            "description": "Called upon transport close.",
            "params": [
                {
                    "name": "reason",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/client.js",
            "line": 214,
            "description": "Cleans up event listeners.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 18,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 24,
            "description": "Socket.IO client source.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 30,
            "description": "Server constructor.",
            "params": [
                {
                    "name": "http",
                    "description": "server, port or options",
                    "type": "http.Server|Number|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 54,
            "description": "Server request verification function, that checks for allowed origins",
            "params": [
                {
                    "name": "request",
                    "description": "",
                    "type": "http.IncomingMessage"
                },
                {
                    "name": "callback",
                    "description": "to be called with the result: `fn(err, success)`",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 84,
            "description": "Sets/gets whether client code is being served.",
            "params": [
                {
                    "name": "whether",
                    "description": "to serve client code",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "self when setting or value when getting",
                "type": "Server|Boolean"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 98,
            "description": "Old settings for backwards compatibility",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 109,
            "description": "Backwards compatiblity.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 137,
            "description": "Sets the client serving path.",
            "params": [
                {
                    "name": "pathname",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self when setting or value when getting",
                "type": "Server|String"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 151,
            "description": "Sets the adapter for rooms.",
            "params": [
                {
                    "name": "pathname",
                    "description": "",
                    "type": "Adapter"
                }
            ],
            "return": {
                "description": "self when setting or value when getting",
                "type": "Server|Adapter"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 170,
            "description": "Sets the allowed origins for requests.",
            "params": [
                {
                    "name": "origins",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self when setting or value when getting",
                "type": "Server|Adapter"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 185,
            "description": "Attaches socket.io to a server or port.",
            "params": [
                {
                    "name": "server",
                    "description": "or port",
                    "type": "http.Server|Number"
                },
                {
                    "name": "options",
                    "description": "passed to engine.io",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Server"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 240,
            "description": "Attaches the static file serving.",
            "params": [
                {
                    "name": "http",
                    "description": "server",
                    "type": "Function|http.Server"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 264,
            "description": "Handles a request serving `/socket.io.js`",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "http.Request"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "http.Response"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 290,
            "description": "Binds socket.io to an engine.io instance.",
            "params": [
                {
                    "name": "engine.io",
                    "description": "(or compatible) server",
                    "type": "engine.Server"
                }
            ],
            "return": {
                "description": "self",
                "type": "Server"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 304,
            "description": "Called with each incoming transport connection.",
            "params": [
                {
                    "name": "socket",
                    "description": "",
                    "type": "engine.Socket"
                }
            ],
            "return": {
                "description": "self",
                "type": "Server"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 319,
            "description": "Looks up a namespace.",
            "params": [
                {
                    "name": "nsp",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "optional,",
                    "description": "nsp `connection` ev handler",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 339,
            "description": "Closes server connection",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 357,
            "description": "Expose main namespace (/).",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/index.js",
            "line": 375,
            "description": "BC with `io.listen`",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 12,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 18,
            "description": "Blacklisted events.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 28,
            "description": "Flags.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 34,
            "description": "`EventEmitter#emit` reference.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 40,
            "description": "Namespace constructor.",
            "params": [
                {
                    "name": "server",
                    "description": "instance",
                    "type": "Server"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "Socket"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 59,
            "description": "Inherits from `EventEmitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 65,
            "description": "Apply flags from `Socket`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 77,
            "description": "Initializes the `Adapter` for this nsp.\nRun upon changing adapter by `Server#adapter`\nin addition to the constructor.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 89,
            "description": "Sets up namespace middleware.",
            "return": {
                "description": "self",
                "type": "Namespace"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 101,
            "description": "Executes the middleware for an incoming client.",
            "params": [
                {
                    "name": "socket",
                    "description": "that will get added",
                    "type": "Socket"
                },
                {
                    "name": "last",
                    "description": "fn call in the middleware",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 129,
            "description": "Targets a room when emitting.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self",
                "type": "Namespace"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 144,
            "description": "Adds a new client.",
            "return": {
                "description": "",
                "type": "Socket"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 181,
            "description": "Removes a client. Called by each `Socket`.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 196,
            "description": "Emits to all clients.",
            "return": {
                "description": "self",
                "type": "Namespace"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/namespace.js",
            "line": 229,
            "description": "Sends a `message` event to all clients.",
            "return": {
                "description": "self",
                "type": "Namespace"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 12,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 18,
            "description": "Blacklisted events.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 32,
            "description": "Flags.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 44,
            "description": "`EventEmitter#emit` reference.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 50,
            "description": "Interface to a `Client` for a given `Namespace`.",
            "params": [
                {
                    "name": "nsp",
                    "description": "",
                    "type": "Namespace"
                },
                {
                    "name": "client",
                    "description": "",
                    "type": "Client"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 73,
            "description": "Inherits from `EventEmitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 79,
            "description": "Apply flags from `Socket`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 91,
            "description": "`request` engine.io shorcut.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 101,
            "description": "Builds the `handshake` BC object",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 120,
            "description": "Emits to this client.",
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 165,
            "description": "Targets a room when broadcasting.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 180,
            "description": "Sends a `message` event.",
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 195,
            "description": "Writes a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 208,
            "description": "Joins a room.",
            "params": [
                {
                    "name": "room",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional,",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 230,
            "description": "Leaves a room.",
            "params": [
                {
                    "name": "room",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional,",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 251,
            "description": "Leave all rooms.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 262,
            "description": "Called by `Namespace` upon succesful\nmiddleware execution (ie: authorization).",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 276,
            "description": "Called with each packet. Called by `Client`.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 311,
            "description": "Called upon event packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 330,
            "description": "Produces an ack callback to emit with an event.",
            "params": [
                {
                    "name": "packet",
                    "description": "id",
                    "type": "Number"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 355,
            "description": "Called upon ack packet.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 372,
            "description": "Called upon client disconnect packet.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 383,
            "description": "Called upon closing. Called by `Client`.",
            "params": [
                {
                    "name": "reason",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 402,
            "description": "Produces an `error` packet.",
            "params": [
                {
                    "name": "error",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io/lib/socket.js",
            "line": 413,
            "description": "Disconnects this client.",
            "params": [
                {
                    "name": "if",
                    "description": "`true`, closes the underlying connection",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/index.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/index.js",
            "line": 11,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/index.js",
            "line": 17,
            "description": "Managers cache.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/index.js",
            "line": 23,
            "description": "Looks up an existing `Manager` for multiplexing.\nIf the user summons:\n\n  `io('http://localhost/a');`\n  `io('http://localhost/b');`\n\nWe reuse the existing instance based on same scheme/port/host,\nand we initialize sockets for each namespace.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/index.js",
            "line": 63,
            "description": "Protocol version.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/index.js",
            "line": 71,
            "description": "`connect`.",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/index.js",
            "line": 80,
            "description": "Expose constructors for standalone build.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 17,
            "description": "Module exports",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 23,
            "description": "`Manager` constructor.",
            "params": [
                {
                    "name": "engine",
                    "description": "instance or engine uri/opts",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 60,
            "description": "Propagate given event to sockets and emit on `this`",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 73,
            "description": "Mix in `Emitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 79,
            "description": "Sets the `reconnection` config.",
            "params": [
                {
                    "name": "true/false",
                    "description": "if it should automatically reconnect",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 93,
            "description": "Sets the reconnection attempts config.",
            "params": [
                {
                    "name": "max",
                    "description": "reconnection attempts before giving up",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 107,
            "description": "Sets the delay between reconnections.",
            "params": [
                {
                    "name": "delay",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 121,
            "description": "Sets the maximum delay between reconnections.",
            "params": [
                {
                    "name": "delay",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 135,
            "description": "Sets the connection timeout. `false` to disable",
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 148,
            "description": "Starts trying to reconnect if reconnection is enabled and we have not\nstarted reconnecting yet",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 165,
            "description": "Sets the current transport `socket`.",
            "params": [
                {
                    "name": "optional,",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "self",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 233,
            "description": "Called upon transport open.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 257,
            "description": "Called with data.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 267,
            "description": "Called when parser fully decodes a packet.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 277,
            "description": "Called upon socket error.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 288,
            "description": "Creates a new socket for the given `nsp`.",
            "return": {
                "description": "",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 310,
            "description": "Called upon a socket close.",
            "params": [
                {
                    "name": "socket",
                    "description": "",
                    "type": "Socket"
                }
            ],
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 324,
            "description": "Writes a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 350,
            "description": "If packet buffer is non-empty, begins encoding the\nnext packet in line.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 364,
            "description": "Clean up transport subscriptions and packet buffer.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 380,
            "description": "Close the current socket.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 393,
            "description": "Called upon engine close.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 409,
            "description": "Attempt a reconnection.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/manager.js",
            "line": 462,
            "description": "Called upon successful reconnect.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/on.js",
            "line": 2,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/on.js",
            "line": 8,
            "description": "Helper for subscriptions.",
            "params": [
                {
                    "name": "obj",
                    "description": "with `Emitter` mixin or `EventEmitter`",
                    "type": "Object|EventEmitter"
                },
                {
                    "name": "event",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 14,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 20,
            "description": "Internal events (blacklisted).\nThese events can't be emitted by the user.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 40,
            "description": "Shortcut to `Emitter#emit`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 46,
            "description": "`Socket` constructor.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 65,
            "description": "Mix in `Emitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 71,
            "description": "Subscribe to open, close and packet events",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 88,
            "description": "\"Opens\" the socket.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 104,
            "description": "Sends a `message` event.",
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 118,
            "description": "Override `emit`.\nIf the event is in `events`, it's emitted normally.",
            "params": [
                {
                    "name": "event",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 154,
            "description": "Sends a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 166,
            "description": "Called upon engine `open`.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 181,
            "description": "Called upon engine `close`.",
            "params": [
                {
                    "name": "reason",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 195,
            "description": "Called with socket packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 236,
            "description": "Called upon a server event.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 259,
            "description": "Produces an ack callback to emit with an event.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 284,
            "description": "Called upon a server acknowlegement.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 298,
            "description": "Called upon server connect.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 311,
            "description": "Emit buffered events (received and emitted).",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 330,
            "description": "Called upon server disconnect.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 342,
            "description": "Called upon forced client/server side disconnections,\nthis method ensures the manager stops tracking us and\nthat reconnections don't get triggered for this.",
            "api": "private.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/socket.js",
            "line": 362,
            "description": "Disconnects the socket manually.",
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/url.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/url.js",
            "line": 9,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/lib/url.js",
            "line": 15,
            "description": "URL parser.",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "An",
                    "description": "object meant to mimic window.location.\n                Defaults to window.location.",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 7,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 16,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 22,
            "description": "Managers cache.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 28,
            "description": "Looks up an existing `Manager` for multiplexing.\nIf the user summons:\n\n  `io('http://localhost/a');`\n  `io('http://localhost/b');`\n\nWe reuse the existing instance based on same scheme/port/host,\nand we initialize sockets for each namespace.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 68,
            "description": "Protocol version.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 76,
            "description": "`connect`.",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 85,
            "description": "Expose constructors for standalone build.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 96,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 111,
            "description": "Module exports",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 117,
            "description": "`Manager` constructor.",
            "params": [
                {
                    "name": "engine",
                    "description": "instance or engine uri/opts",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 154,
            "description": "Propagate given event to sockets and emit on `this`",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 167,
            "description": "Mix in `Emitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 173,
            "description": "Sets the `reconnection` config.",
            "params": [
                {
                    "name": "true/false",
                    "description": "if it should automatically reconnect",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 187,
            "description": "Sets the reconnection attempts config.",
            "params": [
                {
                    "name": "max",
                    "description": "reconnection attempts before giving up",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 201,
            "description": "Sets the delay between reconnections.",
            "params": [
                {
                    "name": "delay",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 215,
            "description": "Sets the maximum delay between reconnections.",
            "params": [
                {
                    "name": "delay",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 229,
            "description": "Sets the connection timeout. `false` to disable",
            "return": {
                "description": "self or value",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 242,
            "description": "Starts trying to reconnect if reconnection is enabled and we have not\nstarted reconnecting yet",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 259,
            "description": "Sets the current transport `socket`.",
            "params": [
                {
                    "name": "optional,",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "self",
                "type": "Manager"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 327,
            "description": "Called upon transport open.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 351,
            "description": "Called with data.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 361,
            "description": "Called when parser fully decodes a packet.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 371,
            "description": "Called upon socket error.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 382,
            "description": "Creates a new socket for the given `nsp`.",
            "return": {
                "description": "",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 404,
            "description": "Called upon a socket close.",
            "params": [
                {
                    "name": "socket",
                    "description": "",
                    "type": "Socket"
                }
            ],
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 418,
            "description": "Writes a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 444,
            "description": "If packet buffer is non-empty, begins encoding the\nnext packet in line.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 458,
            "description": "Clean up transport subscriptions and packet buffer.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 474,
            "description": "Close the current socket.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 487,
            "description": "Called upon engine close.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 503,
            "description": "Attempt a reconnection.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 556,
            "description": "Called upon successful reconnect.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 571,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 577,
            "description": "Helper for subscriptions.",
            "params": [
                {
                    "name": "obj",
                    "description": "with `Emitter` mixin or `EventEmitter`",
                    "type": "Object|EventEmitter"
                },
                {
                    "name": "event",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 597,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 609,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 615,
            "description": "Internal events (blacklisted).\nThese events can't be emitted by the user.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 635,
            "description": "Shortcut to `Emitter#emit`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 641,
            "description": "`Socket` constructor.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 660,
            "description": "Mix in `Emitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 666,
            "description": "Subscribe to open, close and packet events",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 683,
            "description": "\"Opens\" the socket.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 699,
            "description": "Sends a `message` event.",
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 713,
            "description": "Override `emit`.\nIf the event is in `events`, it's emitted normally.",
            "params": [
                {
                    "name": "event",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 749,
            "description": "Sends a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 761,
            "description": "Called upon engine `open`.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 776,
            "description": "Called upon engine `close`.",
            "params": [
                {
                    "name": "reason",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 790,
            "description": "Called with socket packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 831,
            "description": "Called upon a server event.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 854,
            "description": "Produces an ack callback to emit with an event.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 879,
            "description": "Called upon a server acknowlegement.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 893,
            "description": "Called upon server connect.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 906,
            "description": "Emit buffered events (received and emitted).",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 925,
            "description": "Called upon server disconnect.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 937,
            "description": "Called upon forced client/server side disconnections,\nthis method ensures the manager stops tracking us and\nthat reconnections don't get triggered for this.",
            "api": "private.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 957,
            "description": "Disconnects the socket manually.",
            "return": {
                "description": "self",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 984,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 991,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 997,
            "description": "URL parser.",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "An",
                    "description": "object meant to mimic window.location.\n                Defaults to window.location.",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1059,
            "description": "Slice reference.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1065,
            "description": "Bind `obj` to `fn`.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "fn",
                    "description": "or string",
                    "type": "Function|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1085,
            "description": "Expose `Emitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1091,
            "description": "Initialize a new `Emitter`.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1101,
            "description": "Mixin the emitter properties.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1116,
            "description": "Listen on the given `event` with `fn`.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1133,
            "description": "Adds an `event` listener that will be invoked a single\ntime then automatically removed.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1157,
            "description": "Remove the given callback for `event` or all\nregistered callbacks.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1201,
            "description": "Emit `event` with the given args.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "",
                    "description": "",
                    "type": "Mixed",
                    "multiple": true
                }
            ],
            "return": {
                "description": "",
                "type": "Emitter"
            },
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1224,
            "description": "Return array of callbacks for `event`.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1237,
            "description": "Check if this emitter has `event` handlers.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1251,
            "description": "Expose `debug()` as the module.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1257,
            "description": "Create a debugger with the given `name`.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Type"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1288,
            "description": "The currently active debug mode names.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1295,
            "description": "Enables a debug mode by name. This can include modes\nseparated by a colon and wildcards.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1322,
            "description": "Disable debug output.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1332,
            "description": "Humanize the given `ms`.",
            "params": [
                {
                    "name": "m",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1351,
            "description": "Returns true if the given mode name is enabled, false otherwise.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1373,
            "description": "Coerce `val`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1396,
            "description": "Exports parser",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1406,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1419,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1425,
            "description": "Noop function.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1433,
            "description": "Socket constructor.",
            "params": [
                {
                    "name": "uri",
                    "description": "or options",
                    "type": "String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1497,
            "description": "Mix in `Emitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1503,
            "description": "Protocol version.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1511,
            "description": "Expose deps for legacy compatibility\nand standalone browser access.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1521,
            "description": "Creates transport of the given type.",
            "params": [
                {
                    "name": "transport",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Transport"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1572,
            "description": "Initializes transport to use and starts probe.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1607,
            "description": "Sets the current transport. Disables the existing one (if any).",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1641,
            "description": "Probes a transport.",
            "params": [
                {
                    "name": "transport",
                    "description": "name",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1759,
            "description": "Called when connection is deemed open.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1782,
            "description": "Handles a packet.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1822,
            "description": "Called upon handshake completion.",
            "params": [
                {
                    "name": "handshake",
                    "description": "obj",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1846,
            "description": "Resets ping timeout.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1861,
            "description": "Pings server every `this.pingInterval` and expects response\nwithin `this.pingTimeout` or closes connection.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1878,
            "description": "Sends a ping packet.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1888,
            "description": "Called on `drain` event",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1916,
            "description": "Flush write buffers.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1934,
            "description": "Sends a message.",
            "params": [
                {
                    "name": "message.",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "for chaining.",
                "type": "Socket"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1949,
            "description": "Sends a packet.",
            "params": [
                {
                    "name": "packet",
                    "description": "type.",
                    "type": "String"
                },
                {
                    "name": "data.",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "function.",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 1970,
            "description": "Closes the connection.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2018,
            "description": "Called upon transport error",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2031,
            "description": "Called upon transport close.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2074,
            "description": "Filters upgrades, returning only those matching client transports.",
            "params": [
                {
                    "name": "server",
                    "description": "upgrades",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2092,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2099,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2105,
            "description": "Transport abstract constructor.",
            "params": [
                {
                    "name": "options.",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2126,
            "description": "Mix in `Emitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2132,
            "description": "A counter used to prevent collisions in the timestamps used\nfor cache busting.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2139,
            "description": "Emits an error.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Transport"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2155,
            "description": "Opens the transport.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2170,
            "description": "Closes the transport.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2185,
            "description": "Sends multiple packets.",
            "params": [
                {
                    "name": "packets",
                    "description": "",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2200,
            "description": "Called upon open",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2212,
            "description": "Called with data.",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2224,
            "description": "Called with a decoded packet.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2232,
            "description": "Called upon close.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2245,
            "description": "Module dependencies",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2254,
            "description": "Export transports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2261,
            "description": "Polling transport polymorphic constructor.\nDecides on xhr vs jsonp based on feature detection.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2303,
            "description": "Module requirements.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2310,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2316,
            "description": "Cached regular expressions.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2323,
            "description": "Global JSONP callbacks.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2329,
            "description": "Callbacks count.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2335,
            "description": "Noop.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2341,
            "description": "JSONP Polling constructor.",
            "params": [
                {
                    "name": "opts.",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2381,
            "description": "Inherits from Polling.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2393,
            "description": "Closes the socket.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2414,
            "description": "Starts a poll cycle.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2450,
            "description": "Writes with a hidden iframe.",
            "params": [
                {
                    "name": "data",
                    "description": "to send",
                    "type": "String"
                },
                {
                    "name": "called",
                    "description": "upon flush.",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2539,
            "description": "Module requirements.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2549,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2556,
            "description": "Empty function",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2562,
            "description": "XHR Polling constructor.",
            "params": [
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2587,
            "description": "Inherits from Polling.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2593,
            "description": "XHR supports binary",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2599,
            "description": "Creates a request.",
            "params": [
                {
                    "name": "method",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2617,
            "description": "Sends data.",
            "params": [
                {
                    "name": "data",
                    "description": "to send.",
                    "type": "String"
                },
                {
                    "name": "called",
                    "description": "upon flush.",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2636,
            "description": "Starts a poll cycle.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2655,
            "description": "Request constructor",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2676,
            "description": "Mix in `Emitter`.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2682,
            "description": "Creates the XHR object and sends the request.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2756,
            "description": "Called upon successful response.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2767,
            "description": "Called if we have data.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2778,
            "description": "Called upon error.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2789,
            "description": "Cleans up house.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2817,
            "description": "Called upon load.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2847,
            "description": "Check if it has XDomainRequest.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2857,
            "description": "Aborts the request.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2867,
            "description": "Aborts pending requests when unloading the window. This is needed to prevent\nmemory leaks (e.g. when using IE) and to ensure that no spurious error is\nemitted.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2893,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2903,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2909,
            "description": "Is XHR2 supported?",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2919,
            "description": "Polling interface.",
            "params": [
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2934,
            "description": "Inherits from Transport.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2940,
            "description": "Transport name.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2946,
            "description": "Opens the socket (triggers polling). We write a PING message to determine\nwhen the transport is open.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 2957,
            "description": "Pauses polling.",
            "params": [
                {
                    "name": "callback",
                    "description": "upon buffers are flushed and transport is paused",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3001,
            "description": "Starts polling cycle.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3014,
            "description": "Overloads onData to detect payloads.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3056,
            "description": "For polling, send a close packet.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3081,
            "description": "Writes a packets payload.",
            "params": [
                {
                    "name": "data",
                    "description": "packets",
                    "type": "Array"
                },
                {
                    "name": "drain",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3103,
            "description": "Generates uri for connection.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3140,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3150,
            "description": "`ws` exposes a WebSocket-compatible interface in\nNode, or the `WebSocket` or `MozWebSocket` globals\nin the browser.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3158,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3164,
            "description": "WebSocket transport constructor.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3179,
            "description": "Inherits from Transport.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3185,
            "description": "Transport name.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3199,
            "description": "Opens socket.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3226,
            "description": "Adds event listeners to the socket",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3249,
            "description": "Override `onData` to use a timer on iOS.\nSee: https://gist.github.com/mloughran/2052006",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3266,
            "description": "Writes data to socket.",
            "params": [
                {
                    "name": "array",
                    "description": "of packets.",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3300,
            "description": "Called upon close",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3310,
            "description": "Closes socket.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3322,
            "description": "Generates uri for connection.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3359,
            "description": "Feature detection for WebSocket.",
            "return": {
                "description": "whether this transport is available.",
                "type": "Boolean"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3418,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3428,
            "description": "Check if we are running an android browser. That requires us to use\nArrayBuffer with polling transports...\n\nhttp://ghinda.net/jpeg-blob-ajax-android/",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3437,
            "description": "Current protocol version.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3443,
            "description": "Packet types.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3459,
            "description": "Premade error packet.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3465,
            "description": "Create a blob api even for blob builder when vendor prefixes exist",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3471,
            "description": "Encodes a packet.\n\n    <packet type id> [ <data> ]\n\nExample:\n\n    5hello world\n    3\n    4\n\nBinary is encoded in an identical principle",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3520,
            "description": "Encode packet helpers for binary types",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3570,
            "description": "Encodes a packet with binary data in a base64 string",
            "params": [
                {
                    "name": "packet,",
                    "description": "has `type` and `data`",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "base64 encoded message",
                "type": "String"
            },
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3604,
            "description": "Decodes a packet. Changes format to Blob if requested.",
            "return": {
                "description": "with `type` and `data` (if any)",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3647,
            "description": "Decodes a packet encoded in a base64 string",
            "params": [
                {
                    "name": "base64",
                    "description": "encoded message",
                    "type": "String"
                }
            ],
            "return": {
                "description": "with `type` and `data` (if any)",
                "type": "Object"
            },
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3669,
            "description": "Encodes multiple messages (payload).\n\n    <length>:data\n\nExample:\n\n    11:hello world2:hi\n\nIf any contents are binary, they will be encoded as base64 strings. Base64\nencoded strings are marked with a b before the length specifier",
            "params": [
                {
                    "name": "packets",
                    "description": "",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3718,
            "description": "Async array map using after",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3808,
            "description": "Encodes multiple messages (payload) as binary.\n\n<1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n255><data>\n\nExample:\n1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers",
            "params": [
                {
                    "name": "packets",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "encoded payload",
                "type": "ArrayBuffer"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3880,
            "description": "Encode as Blob",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 3988,
            "description": "Gets the keys for an object.",
            "return": {
                "description": "keys",
                "type": "Array"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4038,
            "description": "An abstraction for slicing an arraybuffer even when\nArrayBuffer.prototype.slice is not supported",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4131,
            "description": "Create a blob builder even when vendor prefixes exist",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4140,
            "description": "Check if Blob constructor is supported",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4153,
            "description": "Check if BlobBuilder is supported",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4427,
            "description": "JSON parse.",
            "see": [
                "Based on jQuery#parseJSON (MIT) and JSON2"
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4461,
            "description": "Compiles a querystring\nReturns string representation of the object",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4482,
            "description": "Parses a simple querystring into an object",
            "params": [
                {
                    "name": "qs",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4500,
            "description": "Parses an URI",
            "author": "Steven Levithan <stevenlevithan.com> (MIT license)",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4542,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4548,
            "description": "WebSocket constructor.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4554,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4560,
            "description": "WebSocket constructor.\n\nThe third `opts` options object gets ignored in web browsers, since it's\nnon-standard, and throws a TypeError if passed to the constructor.\nSee: https://github.com/einaros/ws/issues/227",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "protocols",
                    "description": "(optional)",
                    "type": "Array"
                },
                {
                    "name": "{Object)",
                    "description": "opts (optional)"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4594,
            "description": "Module exports.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4600,
            "description": "Checks for binary data.\n\nRight now only Buffer and ArrayBuffer are supported..",
            "params": [
                {
                    "name": "anything",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4654,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4660,
            "description": "Module exports.\n\nLogic borrowed from Modernizr:\n\n  - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4679,
            "description": "Returns `this`. Execute this without a \"context\" (i.e. without it being\nattached to an object of the left-hand side), and `this` points to the\n\"global\" scope of the current JS execution.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4700,
            "description": "HOP ref.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4706,
            "description": "Return own keys in `obj`.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4724,
            "description": "Return own values in `obj`.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4742,
            "description": "Merge `b` into `a`.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a",
                "type": "Object"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4760,
            "description": "Return length of `obj`.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4772,
            "description": "Check if `obj` is empty.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4784,
            "description": "Parses an URI",
            "author": "Steven Levithan <stevenlevithan.com> (MIT license)",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4814,
            "description": "Module requirements",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4821,
            "description": "Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\nAnything with blobs or files should be fed through removeBlobs before coming\nhere.",
            "params": [
                {
                    "name": "packet",
                    "description": "- socket.io event packet",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "with deconstructed packet and list of buffers",
                "type": "Object"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4864,
            "description": "Reconstructs a binary packet from its placeholder packet and buffers",
            "params": [
                {
                    "name": "packet",
                    "description": "- event packet with placeholders",
                    "type": "Object"
                },
                {
                    "name": "buffers",
                    "description": "- binary buffers to put in placeholder positions",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "reconstructed packet",
                "type": "Object"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4899,
            "description": "Asynchronously removes Blobs or Files from data via\nFileReader's readAsArrayBuffer method. Used before encoding\ndata as msgpack. Calls callback with the blobless data.",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4957,
            "description": "Module dependencies.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4968,
            "description": "Protocol version.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4976,
            "description": "Packet types.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 4992,
            "description": "Packet type `connect`.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5000,
            "description": "Packet type `disconnect`.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5008,
            "description": "Packet type `event`.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5016,
            "description": "Packet type `ack`.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5024,
            "description": "Packet type `error`.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5032,
            "description": "Packet type 'binary event'",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5040,
            "description": "Packet type `binary ack`. For acks with binary arguments.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5048,
            "description": "Encoder constructor.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5056,
            "description": "Decoder constructor.",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5064,
            "description": "A socket.io Encoder instance",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5072,
            "description": "Encode a packet as a single string if non-binary, or as a\nbuffer sequence, depending on packet type.",
            "params": [
                {
                    "name": "obj",
                    "description": "- packet object",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "- function to handle encodings (likely engine.write)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Calls callback with Array of encodings"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5094,
            "description": "Encode packet as string.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "encoded",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5141,
            "description": "Encode packet as 'buffer sequence' by removing blobs, and\ndeconstructing packet into object with placeholders and\na list of buffers.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "encoded",
                "type": "Buffer"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5165,
            "description": "A socket.io Decoder instance",
            "return": {
                "description": "decoder",
                "type": "Object"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5176,
            "description": "Mix in `Emitter` with Decoder.",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5182,
            "description": "Decodes an ecoded packet string into packet JSON.",
            "params": [
                {
                    "name": "obj",
                    "description": "- encoded packet",
                    "type": "String"
                }
            ],
            "return": {
                "description": "packet",
                "type": "Object"
            },
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5221,
            "description": "Decode a packet String (JSON data)",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "packet",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5288,
            "description": "Deallocates a parser's resources",
            "api": "public",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5300,
            "description": "A manager of a binary event's 'buffer sequence'. Should\nbe constructed whenever a packet of type BINARY_EVENT is\ndecoded.",
            "params": [
                {
                    "name": "packet",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "initialized reconstructor",
                "type": "BinaryReconstructor"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5315,
            "description": "Method to be called when binary data received from connection\nafter a BINARY_EVENT packet.",
            "params": [
                {
                    "name": "binData",
                    "description": "- the raw binary data received",
                    "type": "Buffer | ArrayBuffer"
                }
            ],
            "return": {
                "description": "returns null if more binary data is expected or\n  a reconstructed packet object if all buffers have been received.",
                "type": "Null | Object"
            },
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5335,
            "description": "Cleans up binary packet reconstruction variables.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        },
        {
            "file": "bin/node_modules/socket.io-client/socket.io.js",
            "line": 5358,
            "description": "Returns true if obj is a buffer or an arraybuffer.",
            "api": "private",
            "class": "",
            "module": "resource-type-manager"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:69"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:79"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:90"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:100"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:110"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:120"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:133"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:143"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:153"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:71"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:96"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:121"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:132"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:143"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:163"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:184"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:260"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:480"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:75"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:100"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:125"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:136"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:147"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:167"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:267"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:279"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:347"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/aggregation.js:7"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/aggregation.js:132"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/core.js:9"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/shared.js:60"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/shared.js:88"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:117"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:145"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:158"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:176"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:275"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:540"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:561"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:711"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:759"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:783"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:810"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:820"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set_state.js:1"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:13"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:25"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:38"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:138"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:200"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:292"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:297"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:330"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:351"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:380"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:380"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:398"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:398"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:410"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:410"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:423"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:423"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:455"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:455"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:464"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:464"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:480"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:480"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:491"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:491"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/connection.js:206"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:85"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:90"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:97"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:386"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:424"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:432"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:442"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:448"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:462"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:469"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:476"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:481"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:486"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:493"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:503"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:523"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:562"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:24"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:34"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:42"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:55"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:64"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:130"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:142"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:150"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:157"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:164"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:199"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:206"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:217"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:224"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:231"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:241"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:253"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:287"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:630"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:704"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:711"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:731"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:754"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:777"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:799"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:806"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:845"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:865"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:874"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:886"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:898"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:907"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:917"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:926"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:942"
        },
        {
            "message": "unknown tag: name",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:213"
        },
        {
            "message": "unknown tag: lends",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:213"
        },
        {
            "message": "unknown tag: field",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:213"
        },
        {
            "message": "unknown tag: constant",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:228"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js:20"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js:66"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js:87"
        },
        {
            "message": "unknown tag: fileoverview",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:106"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:122"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:163"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:163"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:278"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:346"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:346"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:436"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:436"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:481"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:561"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:561"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:590"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:590"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:599"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:599"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:609"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:622"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:622"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:649"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:677"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:690"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:716"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:751"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:815"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:826"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:889"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:899"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:923"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:937"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:954"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:961"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:968"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:975"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:982"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:989"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1028"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1073"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1117"
        },
        {
            "message": "unknown tag: callback",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1141"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1141"
        },
        {
            "message": "unknown tag: field",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1187"
        },
        {
            "message": "unknown tag: getter",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1187"
        },
        {
            "message": "unknown tag: setter",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1187"
        },
        {
            "message": "unknown tag: field",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1209"
        },
        {
            "message": "unknown tag: getter",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1209"
        },
        {
            "message": "unknown tag: setter",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1209"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1224"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1242"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1260"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1266"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1290"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1303"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1340"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1355"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1368"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1388"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1442"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1451"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1460"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1510"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1522"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1535"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1566"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1566"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:53"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:53"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:70"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:70"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:162"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:162"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:174"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:174"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:188"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:188"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:19"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:31"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:46"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:66"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:91"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:104"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:119"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:133"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:161"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:188"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:223"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:240"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:262"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:303"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:318"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:337"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:1"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:72"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:94"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:113"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:127"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:145"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:168"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:183"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:199"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:210"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:232"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:250"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:298"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:340"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:365"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:390"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:403"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:420"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:429"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:439"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:456"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:480"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:499"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:508"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:517"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:527"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:550"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:568"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:579"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:598"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:612"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:628"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:644"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:660"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:117"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:144"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:220"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:303"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:332"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:366"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:403"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:424"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:453"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:480"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:509"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:509"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:533"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:533"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:633"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:633"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:643"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:643"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:658"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:762"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:762"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:902"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:949"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:962"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:996"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1006"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1013"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1020"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1027"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1034"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1034"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:47"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:47"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:64"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:64"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:74"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:74"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:93"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:93"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:115"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:124"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:143"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:224"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:238"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:243"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:312"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:340"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:367"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:379"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:405"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:485"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:502"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:556"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:577"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:630"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:649"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:687"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:776"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:846"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:922"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1005"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1077"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1188"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1211"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1239"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1239"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1251"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1251"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1271"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1438"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1495"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1521"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1546"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1571"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1649"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1673"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1703"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1715"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1829"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1829"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1924"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1984"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1984"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2044"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2044"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2050"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2050"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2057"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2057"
        },
        {
            "message": "unknown tag: classconstant",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2067"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2074"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2111"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2121"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2133"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2146"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2175"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2175"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2184"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2184"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:46"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:51"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:87"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:107"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:118"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:129"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:105"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:105"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:130"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:130"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:145"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:145"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:166"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:166"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:178"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:178"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:202"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:202"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:212"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:212"
        },
        {
            "message": "unknown tag: ignore",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:222"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:222"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bin/node_modules/prometheus-field-type/field-type.js:12"
        },
        {
            "message": "unknown tag: abstract",
            "line": " bin/node_modules/prometheus-field-type/field-type.js:12"
        },
        {
            "message": "unknown tag: memberof",
            "line": " bin/node_modules/prometheus-field-type-manager/types/association.js:6"
        },
        {
            "message": "unknown tag: this",
            "line": " bin/node_modules/prometheus-field-type-manager/types/association.js:6"
        },
        {
            "message": "unknown tag: inner",
            "line": " bin/node_modules/prometheus-field-type-manager/types/association.js:6"
        },
        {
            "message": "unknown tag: override",
            "line": " bin/node_modules/prometheus-field-type-manager/types/association.js:21"
        },
        {
            "message": "unknown tag: this",
            "line": " bin/node_modules/prometheus-field-type-manager/types/association.js:21"
        },
        {
            "message": "unknown tag: callback",
            "line": " bin/node_modules/prometheus-resource-manager/resource-manager.js:57"
        },
        {
            "message": "unknown tag: name",
            "line": " bin/node_modules/prometheus-resource-type/resource-type.js:29"
        },
        {
            "message": "unknown tag: name",
            "line": " bin/node_modules/prometheus-resource-type/resource-type.js:41"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:15"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:36"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:51"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:82"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:98"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:115"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:129"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:163"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:173"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:192"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/client.js:214"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:30"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:84"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:109"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:137"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:151"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:170"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:185"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:240"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:264"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:290"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:304"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:319"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/index.js:339"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:40"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:77"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:89"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:101"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:129"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:144"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:181"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:196"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/namespace.js:229"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:18"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:32"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:50"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:91"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:101"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:120"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:165"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:180"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:195"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:208"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:230"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:251"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:262"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:276"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:311"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:330"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:355"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:372"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:383"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:402"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io/lib/socket.js:413"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/index.js:23"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/index.js:63"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/index.js:71"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/index.js:80"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:23"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:60"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:79"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:93"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:107"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:121"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:135"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:148"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:165"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:233"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:257"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:267"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:277"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:288"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:324"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:350"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:364"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:380"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:393"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:409"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:462"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/on.js:8"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:20"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:46"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:71"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:88"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:104"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:118"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:154"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:166"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:181"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:195"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:236"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:259"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:284"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:298"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:311"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:330"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:342"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:362"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/lib/url.js:15"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:28"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:68"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:76"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:85"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:117"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:154"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:173"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:187"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:201"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:215"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:229"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:242"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:259"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:327"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:351"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:361"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:371"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:382"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:418"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:444"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:458"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:474"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:487"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:503"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:556"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:577"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:615"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:641"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:666"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:683"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:699"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:713"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:749"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:761"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:776"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:790"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:831"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:854"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:879"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:893"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:906"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:925"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:937"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:957"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:997"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1065"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1091"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1101"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1116"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1133"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1157"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1224"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1237"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1257"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1295"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1322"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1332"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1351"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1396"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1425"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1433"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1503"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1521"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1572"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1607"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1641"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1759"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1782"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1822"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1846"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1861"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1878"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1888"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1916"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1934"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1949"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1970"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2018"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2031"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2074"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2105"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2139"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2155"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2170"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2185"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2200"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2212"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2232"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2261"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2341"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2393"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2414"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2450"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2562"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2599"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2617"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2636"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2655"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2682"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2756"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2767"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2778"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2789"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2817"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2847"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2857"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2919"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2946"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2957"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3001"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3014"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3056"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3081"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3103"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3164"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3164"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3185"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3199"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3226"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3249"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3266"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3300"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3310"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3322"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3359"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3471"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3604"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3669"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3808"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3988"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4038"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4427"
        },
        {
            "message": "param name missing: {Object}",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4461"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4461"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4482"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4500"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4560"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4600"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4706"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4724"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4742"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4760"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4772"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4784"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4821"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4864"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4899"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4968"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4976"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4992"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5000"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5008"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5016"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5024"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5032"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5040"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5048"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5056"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5064"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5072"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5094"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5141"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5165"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5182"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5221"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5288"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5300"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5315"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5335"
        },
        {
            "message": "unknown tag: api",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5358"
        },
        {
            "message": "Missing item type\nHelper function to define properties",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:14"
        },
        {
            "message": "Missing item type\nKeeps the state of a unordered batch so we can rewrite the results\ncorrectly after command execution",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:26"
        },
        {
            "message": "Missing item type\nWraps a legacy operation so we can correctly rewrite it's error",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:39"
        },
        {
            "message": "Missing item type\nReturn an array of upserted ids",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:69"
        },
        {
            "message": "Missing item type\nReturn the upserted id at position x",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:79"
        },
        {
            "message": "Missing item type\nReturn raw internal result",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:90"
        },
        {
            "message": "Missing item type\nReturns true if the bulk operation contains a write error",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:100"
        },
        {
            "message": "Missing item type\nReturns the number of write errors off the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:110"
        },
        {
            "message": "Missing item type\nReturns a specific write error object",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:120"
        },
        {
            "message": "Missing item type\nRetrieve all write errors",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:133"
        },
        {
            "message": "Missing item type\nRetrieve lastOp if available",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:143"
        },
        {
            "message": "Missing item type\nRetrieve the write concern error if any",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:153"
        },
        {
            "message": "Missing item type\nWraps a write concern error",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:194"
        },
        {
            "message": "Missing item type\nWraps the error",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:213"
        },
        {
            "message": "Missing item type\nMerges results into shared data structure",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/common.js:239"
        },
        {
            "message": "Missing item type\nAdd a single update document to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:71"
        },
        {
            "message": "Missing item type\nAdd a single update one document to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:96"
        },
        {
            "message": "Missing item type\nAdd a replace one operation to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:121"
        },
        {
            "message": "Missing item type\nUpsert modifier for update bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:132"
        },
        {
            "message": "Missing item type\nAdd a remove one operation to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:143"
        },
        {
            "message": "Missing item type\nAdd a remove operation to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:163"
        },
        {
            "message": "Missing item type\nAdd a single insert document to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:184"
        },
        {
            "message": "Missing item type\nInitiate a find operation for an update/updateOne/remove/removeOne/replaceOne",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:260"
        },
        {
            "message": "Missing item type\nExecute the ordered bulk operation\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:480"
        },
        {
            "message": "Missing item type\nReturns an unordered batch object",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js:522"
        },
        {
            "message": "Missing item type\nAdd a single update document to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:75"
        },
        {
            "message": "Missing item type\nAdd a single update one document to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:100"
        },
        {
            "message": "Missing item type\nAdd a replace one operation to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:125"
        },
        {
            "message": "Missing item type\nUpsert modifier for update bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:136"
        },
        {
            "message": "Missing item type\nAdd a remove one operation to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:147"
        },
        {
            "message": "Missing item type\nAdd a remove operation to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:167"
        },
        {
            "message": "Missing item type\nAdd a single insert document to the bulk operation",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:267"
        },
        {
            "message": "Missing item type\nInitiate a find operation for an update/updateOne/remove/removeOne/replaceOne",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:279"
        },
        {
            "message": "Missing item type\nExecute the unordered bulk operation\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:347"
        },
        {
            "message": "Missing item type\nReturns an unordered batch object",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js:568"
        },
        {
            "message": "Missing item type\nFunctions that are passed as scope args must\nbe converted to Code instances.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/aggregation.js:7"
        },
        {
            "message": "Missing item type\nGroup function helper",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/aggregation.js:132"
        },
        {
            "message": "Missing item type\nPrecompiled regexes",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/core.js:9"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/shared.js:60"
        },
        {
            "message": "Missing item type\nNormalizes a `hint` argument.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection/shared.js:88"
        },
        {
            "message": "Missing item type\nBase object used for common functionality",
            "line": " bin/node_modules/mongodb/lib/mongodb/commands/base_command.js:1"
        },
        {
            "message": "Missing item type\nDb Command",
            "line": " bin/node_modules/mongodb/lib/mongodb/commands/db_command.js:7"
        },
        {
            "message": "Missing item type\nInsert Document Command",
            "line": " bin/node_modules/mongodb/lib/mongodb/commands/delete_command.js:4"
        },
        {
            "message": "Missing item type\nGet More Document Command",
            "line": " bin/node_modules/mongodb/lib/mongodb/commands/get_more_command.js:5"
        },
        {
            "message": "Missing item type\nInsert Document Command",
            "line": " bin/node_modules/mongodb/lib/mongodb/commands/insert_command.js:4"
        },
        {
            "message": "Missing item type\nInsert Document Command",
            "line": " bin/node_modules/mongodb/lib/mongodb/commands/kill_cursor_command.js:5"
        },
        {
            "message": "Missing item type\nInsert Document Command",
            "line": " bin/node_modules/mongodb/lib/mongodb/commands/query_command.js:4"
        },
        {
            "message": "Missing item type\nUpdate Document Command",
            "line": " bin/node_modules/mongodb/lib/mongodb/commands/update_command.js:4"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:117"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:145"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:158"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:176"
        },
        {
            "message": "Missing item type\nCreates a new server for the `replset` based on `host`.",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:275"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:540"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:561"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:711"
        },
        {
            "message": "Missing item type\nPick a secondary using round robin",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:759"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:783"
        },
        {
            "message": "Missing item type\nGet list of secondaries",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:810"
        },
        {
            "message": "Missing item type\nGet list of secondaries",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js:820"
        },
        {
            "message": "Missing item type\nInterval state object constructor",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set_state.js:1"
        },
        {
            "message": "Missing item type\nInternal class for callback storage",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:13"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:25"
        },
        {
            "message": "Missing item type\nInternal class for holding non-executed commands",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:38"
        },
        {
            "message": "Missing item type\nInternal class for authentication storage",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:138"
        },
        {
            "message": "Missing item type\nInternal class for storing db references",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:200"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:292"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:297"
        },
        {
            "message": "Missing item type\nFire all the errors",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:330"
        },
        {
            "message": "Missing item type\nFire all the errors",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:351"
        },
        {
            "message": "Missing item type\nRegister a handler",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:380"
        },
        {
            "message": "Missing item type\nRe-Register a handler, on the cursor id f.ex",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:398"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:410"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:423"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:455"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:464"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:480"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/base.js:491"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/connection.js:206"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:85"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:90"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:97"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:386"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:424"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:432"
        },
        {
            "message": "Missing item type\nAlways ourselves",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:442"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:448"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:462"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:469"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:476"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:481"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:486"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:493"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:503"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:523"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/mongos.js:562"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:24"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:34"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:42"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:55"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/read_preference.js:64"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:130"
        },
        {
            "message": "Missing item type\nAlways ourselves",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:142"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:150"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:157"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:164"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:199"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:206"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:217"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:224"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:231"
        },
        {
            "message": "Missing item type\nAssigns a replica set to this `server`.",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:241"
        },
        {
            "message": "Missing item type\nTakes needed options from `replset` and overwrites\nour own options.",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:253"
        },
        {
            "message": "Missing item type\nOpens this server connection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:287"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:630"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:704"
        },
        {
            "message": "Missing item type\nCheck if a writer can be provided",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:711"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:731"
        },
        {
            "message": "Missing item type\nCheck if a reader can be provided",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:754"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:777"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:799"
        },
        {
            "message": "Missing item type\nInternal statistics object used for calculating average and standard devitation on\nrunning queries",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:806"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:845"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:865"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:874"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:886"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:898"
        },
        {
            "message": "Missing item type\nGetter for query Stats",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:907"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:917"
        },
        {
            "message": "Missing item type\nGet Read Preference method",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:926"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/connection/server.js:942"
        },
        {
            "message": "Missing item type\nWrites a data to this object and advance the read/write head.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:50"
        },
        {
            "message": "Missing item type\nReads data and advances the read/write head.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:65"
        },
        {
            "message": "Missing item type\nChecks if the read/write head is at the end.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:102"
        },
        {
            "message": "Missing item type\nReads one character from the data of this chunk and advances the read/write\nhead.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:112"
        },
        {
            "message": "Missing item type\nClears the contents of the data in this chunk and resets the read/write head\nto the initial position.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:123"
        },
        {
            "message": "Missing item type\nSaves this chunk to the database. Also overwrites existing entries having the\nsame id as this chunk.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:132"
        },
        {
            "message": "Missing item type\nCreates a mongoDB object representation of this chunk.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:177"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:206"
        },
        {
            "message": "Missing item type\nThe position of the read/write head",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:213"
        },
        {
            "message": "Missing item type\nThe default chunk size",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/chunk.js:228"
        },
        {
            "message": "Missing item type\nPuts binary data to the grid\n\nOptions\n - **_id** {Any}, unique id for this file\n - **root** {String}, root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n - **content_type** {String}, mime type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n - **chunk_size** {Number}, size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n - **metadata** {Object}, arbitrary data the user wants to store.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js:20"
        },
        {
            "message": "Missing item type\nGet binary data to the grid",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js:66"
        },
        {
            "message": "Missing item type\nDelete file from grid",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/grid.js:87"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1"
        },
        {
            "message": "Missing item type\nCode for the streaming capabilities of the gridstore object\nMost code from Aaron heckmanns project https://github.com/aheckmann/gridfs-stream\nModified to work on the gridstore object itself",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:106"
        },
        {
            "message": "Missing item type\nOpens the file from the database and initialize this object. Also creates a\nnew one if file does not exist.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:122"
        },
        {
            "message": "Missing item type\nHidding the _open function",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:163"
        },
        {
            "message": "Missing item type\nStores a file from the file system to the GridFS database.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:278"
        },
        {
            "message": "Missing item type\nWrites some data. This method will work properly only if initialized with mode\n\"w\" or \"w+\".",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:346"
        },
        {
            "message": "Missing item type\nCreates a mongoDB object representation of this object.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:436"
        },
        {
            "message": "Missing item type\nSaves this file to the database. This will overwrite the old entry if it\nalready exists. This will work properly only if mode was initialized to\n\"w\" or \"w+\".",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:481"
        },
        {
            "message": "Missing item type\nGets the nth chunk of this file.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:561"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:590"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:599"
        },
        {
            "message": "Missing item type\nRetrieve this file's chunks collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:609"
        },
        {
            "message": "Missing item type\nDeletes all the chunks of this file in the database.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:622"
        },
        {
            "message": "Missing item type\nDeletes all the chunks of this file in the database.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:649"
        },
        {
            "message": "Missing item type\nRetrieves the file collection associated with this object.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:677"
        },
        {
            "message": "Missing item type\nReads the data of this file.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:690"
        },
        {
            "message": "Missing item type\nDeletes all the chunks of this file in the database if mode was set to \"w\" or\n\"w+\" and resets the read/write head to the initial position.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:716"
        },
        {
            "message": "Missing item type\nRetrieves the contents of this file and advances the read/write head. Works with Buffers only.\n\nThere are 3 signatures for this method:\n\n(callback)\n(length, callback)\n(length, buffer, callback)",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:751"
        },
        {
            "message": "Missing item type\nRetrieves the position of the read/write head of this file.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:815"
        },
        {
            "message": "Missing item type\nMoves the read/write head to a new location.\n\nThere are 3 signatures for this method\n\nSeek Location Modes\n - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file.\n - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file.\n - **GridStore.IO_SEEK_END**, set the position from the end of the file.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:826"
        },
        {
            "message": "Missing item type\nVerify if the file is at EOF.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:889"
        },
        {
            "message": "Missing item type\nRetrieves a single character from this file.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:899"
        },
        {
            "message": "Missing item type\nWrites a string to the file with a newline character appended at the end if\nthe given string does not have one.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:923"
        },
        {
            "message": "Missing item type\nReturns read stream based on this GridStore file\n\nEvents\n - **data** {function(item) {}} the data event triggers when a document is ready.\n - **end** {function() {}} the end event triggers when there is no more documents available.\n - **close** {function() {}} the close event triggers when the stream is closed.\n - **error** {function(err) {}} the error event triggers if an error happens.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:937"
        },
        {
            "message": "Missing item type\nThe collection to be used for holding the files and chunks collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:954"
        },
        {
            "message": "Missing item type\nDefault file mime type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:961"
        },
        {
            "message": "Missing item type\nSeek mode where the given length is absolute.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:968"
        },
        {
            "message": "Missing item type\nSeek mode where the given length is an offset to the current read/write head.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:975"
        },
        {
            "message": "Missing item type\nSeek mode where the given length is an offset to the end of the file.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:982"
        },
        {
            "message": "Missing item type\nChecks if a file exists in the database.\n\nOptions\n - **readPreference** {String}, the prefered read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:989"
        },
        {
            "message": "Missing item type\nGets the list of files stored in the GridFS.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1028"
        },
        {
            "message": "Missing item type\nReads the contents of a file.\n\nThis method has the following signatures\n\n(db, name, callback)\n(db, name, length, callback)\n(db, name, length, offset, callback)\n(db, name, length, offset, options, callback)",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1073"
        },
        {
            "message": "Missing item type\nReads the data of this file.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1117"
        },
        {
            "message": "Missing item type\nDeletes the chunks and metadata information of a file from GridFS.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1141"
        },
        {
            "message": "Missing item type\nGridStore Streaming methods\nHandles the correct return of the writeable stream status",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1224"
        },
        {
            "message": "Missing item type\nHandles the correct return of the readable stream status",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1242"
        },
        {
            "message": "Missing item type\nHandles the correct setting of encoding for the stream",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1260"
        },
        {
            "message": "Missing item type\nHandles the end events",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1266"
        },
        {
            "message": "Missing item type\nHandles the normal writes to gridstore",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1290"
        },
        {
            "message": "Missing item type\nWrites some data. This method will work properly only if initialized with mode \"w\" or \"w+\".",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1303"
        },
        {
            "message": "Missing item type\nHandles the destroy part of a stream",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1340"
        },
        {
            "message": "Missing item type\nHandles the destroySoon part of a stream",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1355"
        },
        {
            "message": "Missing item type\nHandles the pipe part of the stream",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1368"
        },
        {
            "message": "Missing item type\nInternal module methods",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1388"
        },
        {
            "message": "Missing item type\npause",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1442"
        },
        {
            "message": "Missing item type\nresume",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1451"
        },
        {
            "message": "Missing item type\nInternal module methods",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1460"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1510"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1522"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1535"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js:1566"
        },
        {
            "message": "Missing item type\nInherit from Stream",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:53"
        },
        {
            "message": "Missing item type\nFlag stating whether or not this stream is readable.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:60"
        },
        {
            "message": "Missing item type\nFlag stating whether or not this stream is paused.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:65"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:70"
        },
        {
            "message": "Missing item type\nPauses this stream, then no farther events will be fired.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:162"
        },
        {
            "message": "Missing item type\nDestroys the stream, then no farther events will be fired.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:174"
        },
        {
            "message": "Missing item type\nResumes this stream.",
            "line": " bin/node_modules/mongodb/lib/mongodb/gridfs/readstream.js:188"
        },
        {
            "message": "Missing item type\nReply message from mongo db",
            "line": " bin/node_modules/mongodb/lib/mongodb/responses/mongo_reply.js:7"
        },
        {
            "message": "Missing item type\nRetrieve the server information for the current\ninstance of the db client",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:19"
        },
        {
            "message": "Missing item type\nRetrieve the server information for the current\ninstance of the db client",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:31"
        },
        {
            "message": "Missing item type\nRetrieve this db's server status.",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:46"
        },
        {
            "message": "Missing item type\nRetrieve the current profiling Level for MongoDB",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:66"
        },
        {
            "message": "Missing item type\nPing the MongoDB server and retrieve results",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:91"
        },
        {
            "message": "Missing item type\nAuthenticate against MongoDB",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:104"
        },
        {
            "message": "Missing item type\nLogout current authenticated user",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:119"
        },
        {
            "message": "Missing item type\nAdd a user to the MongoDB server, if the user exists it will\noverwrite the current password\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:133"
        },
        {
            "message": "Missing item type\nRemove a user from the MongoDB server\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:161"
        },
        {
            "message": "Missing item type\nSet the current profiling level of MongoDB",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:188"
        },
        {
            "message": "Missing item type\nRetrive the current profiling information for MongoDB",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:223"
        },
        {
            "message": "Missing item type\nExecute a db command against the Admin database",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:240"
        },
        {
            "message": "Missing item type\nValidate an existing collection",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:262"
        },
        {
            "message": "Missing item type\nList the available databases",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:303"
        },
        {
            "message": "Missing item type\nGet ReplicaSet status",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:318"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/admin.js:337"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:1"
        },
        {
            "message": "Missing item type\nInserts a single document or a an array of documents into MongoDB.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **continueOnError/keepGoing** {Boolean, default:false}, keep inserting documents even if one document has an error, *mongodb 1.9.1 >*.\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **forceServerObjectId** {Boolean, default:false}, let server assign ObjectId instead of the driver\n - **checkKeys** {Boolean, default:true}, allows for disabling of document key checking (WARNING OPENS YOU UP TO INJECTION ATTACKS)\n - **fullResult** {Boolean, default:false}, returns the full result document (document returned will differ by server version)",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:72"
        },
        {
            "message": "Missing item type\nRemoves documents specified by `selector` from the db.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **single** {Boolean, default:false}, removes the first document found.\n - **fullResult** {Boolean, default:false}, returns the full result document (document returned will differ by server version)",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:94"
        },
        {
            "message": "Missing item type\nRenames the collection.\n\nOptions\n - **dropTarget** {Boolean, default:false}, drop the target name collection if it previously exists.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:113"
        },
        {
            "message": "Missing item type\nSave a document. Simple full document replacement function. Not recommended for efficiency, use atomic\noperators and update instead for more efficient operations.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:127"
        },
        {
            "message": "Missing item type\nUpdates documents.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **upsert** {Boolean, default:false}, perform an upsert operation.\n - **multi** {Boolean, default:false}, update all documents matching the selector.\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **checkKeys** {Boolean, default:true}, allows for disabling of document key checking (WARNING OPENS YOU UP TO INJECTION ATTACKS)\n - **fullResult** {Boolean, default:false}, returns the full result document (document returned will differ by server version)",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:145"
        },
        {
            "message": "Missing item type\nThe distinct command returns returns a list of distinct values for the given key across a collection.\n\nOptions\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:168"
        },
        {
            "message": "Missing item type\nCount number of matching documents in the db to a query.\n\nOptions\n - **skip** {Number}, The number of documents to skip for the count.\n - **limit** {Number}, The limit of documents to count.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:183"
        },
        {
            "message": "Missing item type\nDrop the collection",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:199"
        },
        {
            "message": "Missing item type\nFind and update a document.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **remove** {Boolean, default:false}, set to true to remove the object before returning.\n - **upsert** {Boolean, default:false}, perform an upsert operation.\n - **new** {Boolean, default:false}, set to true if you want to return the modified object rather than the original. Ignored for remove.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:210"
        },
        {
            "message": "Missing item type\nFind and remove a document\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:232"
        },
        {
            "message": "Missing item type\nCreates a cursor for a query that can be used to iterate over results from MongoDB\n\nVarious argument possibilities\n - callback?\n - selector, callback?,\n - selector, fields, callback?\n - selector, options, callback?\n - selector, fields, options, callback?\n - selector, fields, skip, limit, callback?\n - selector, fields, skip, limit, timeout, callback?\n\nOptions\n - **limit** {Number, default:0}, sets the limit of documents returned in the query.\n - **sort** {Array | Object}, set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n - **fields** {Object}, the fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n - **skip** {Number, default:0}, set to skip N documents ahead in your query (useful for pagination).\n - **hint** {Object}, tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n - **explain** {Boolean, default:false}, explain the query instead of returning the data.\n - **snapshot** {Boolean, default:false}, snapshot query.\n - **timeout** {Boolean, default:false}, specify if the cursor can timeout.\n - **tailable** {Boolean, default:false}, specify if the cursor is tailable.\n - **tailableRetryInterval** {Number, default:100}, specify the miliseconds between getMores on tailable cursor.\n - **numberOfRetries** {Number, default:5}, specify the number of times to retry the tailable cursor.\n - **awaitdata** {Boolean, default:false} allow the cursor to wait for data, only applicable for tailable cursor.\n - **oplogReplay** {Boolean, default:false} sets an internal flag, only applicable for tailable cursor.\n - **exhaust** {Boolean, default:false} have the server send all the documents at once as getMore packets, not recommended.\n - **batchSize** {Number, default:0}, set the batchSize for the getMoreCommand when iterating over the query results.\n - **returnKey** {Boolean, default:false}, only return the index key.\n - **maxScan** {Number}, Limit the number of items to scan.\n - **min** {Number}, Set index bounds.\n - **max** {Number}, Set index bounds.\n - **showDiskLoc** {Boolean, default:false}, Show disk location of results.\n - **comment** {String}, You can put a $comment field on a query to make looking in the profiler logs simpler.\n - **raw** {Boolean, default:false}, Return all BSON documents as Raw Buffer documents.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **numberOfRetries** {Number, default:5}, if using awaidata specifies the number of times to retry on timeout.\n - **partial** {Boolean, default:false}, specify if the cursor should return partial results when querying against a sharded system\n - **maxTimeMS** {Number}, number of miliseconds to wait before aborting the query.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:250"
        },
        {
            "message": "Missing item type\nFinds a single document based on the query\n\nVarious argument possibilities\n - callback?\n - selector, callback?,\n - selector, fields, callback?\n - selector, options, callback?\n - selector, fields, options, callback?\n - selector, fields, skip, limit, callback?\n - selector, fields, skip, limit, timeout, callback?\n\nOptions\n - **limit** {Number, default:0}, sets the limit of documents returned in the query.\n - **sort** {Array | Object}, set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n - **fields** {Object}, the fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n - **skip** {Number, default:0}, set to skip N documents ahead in your query (useful for pagination).\n - **hint** {Object}, tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n - **explain** {Boolean, default:false}, explain the query instead of returning the data.\n - **snapshot** {Boolean, default:false}, snapshot query.\n - **timeout** {Boolean, default:false}, specify if the cursor can timeout.\n - **tailable** {Boolean, default:false}, specify if the cursor is tailable.\n - **batchSize** {Number, default:0}, set the batchSize for the getMoreCommand when iterating over the query results.\n - **returnKey** {Boolean, default:false}, only return the index key.\n - **maxScan** {Number}, Limit the number of items to scan.\n - **min** {Number}, Set index bounds.\n - **max** {Number}, Set index bounds.\n - **showDiskLoc** {Boolean, default:false}, Show disk location of results.\n - **comment** {String}, You can put a $comment field on a query to make looking in the profiler logs simpler.\n - **raw** {Boolean, default:false}, Return all BSON documents as Raw Buffer documents.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **partial** {Boolean, default:false}, specify if the cursor should return partial results when querying against a sharded system\n - **maxTimeMS** {Number}, number of miliseconds to wait before aborting the query.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:298"
        },
        {
            "message": "Missing item type\nCreates an index on the collection.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **unique** {Boolean, default:false}, creates an unique index.\n - **sparse** {Boolean, default:false}, creates a sparse index.\n - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n - **v** {Number}, specify the format version of the indexes.\n - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:340"
        },
        {
            "message": "Missing item type\nEnsures that an index exists, if it does not it creates it\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **unique** {Boolean, default:false}, creates an unique index.\n - **sparse** {Boolean, default:false}, creates a sparse index.\n - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n - **v** {Number}, specify the format version of the indexes.\n - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:365"
        },
        {
            "message": "Missing item type\nRetrieves this collections index info.\n\nOptions\n - **full** {Boolean, default:false}, returns the full raw index information.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:390"
        },
        {
            "message": "Missing item type\nDrops an index from this collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:403"
        },
        {
            "message": "Missing item type\nDrops all indexes from this collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:420"
        },
        {
            "message": "Missing item type\nDrops all indexes from this collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:429"
        },
        {
            "message": "Missing item type\nReindex all indexes on the collection\nWarning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:439"
        },
        {
            "message": "Missing item type\nRun Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n\nOptions\n - **out** {Object}, sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*\n - **query** {Object}, query filter object.\n - **sort** {Object}, sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n - **limit** {Number}, number of objects to return from collection.\n - **keeptemp** {Boolean, default:false}, keep temporary data.\n - **finalize** {Function | String}, finalize function.\n - **scope** {Object}, can pass in variables that can be access from map/reduce/finalize.\n - **jsMode** {Boolean, default:false}, it is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\n - **verbose** {Boolean, default:false}, provide statistics on job execution time.\n - **readPreference** {String, only for inline results}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:456"
        },
        {
            "message": "Missing item type\nRun a group command across a collection\n\nOptions\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:480"
        },
        {
            "message": "Missing item type\nReturns the options of the collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:499"
        },
        {
            "message": "Missing item type\nReturns if the collection is a capped collection",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:508"
        },
        {
            "message": "Missing item type\nChecks if one or more indexes exist on the collection",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:517"
        },
        {
            "message": "Missing item type\nExecute the geoNear command to search for items in the collection\n\nOptions\n - **num** {Number}, max number of results to return.\n - **minDistance** {Number}, include results starting at minDistance from a point (2.6 or higher)\n - **maxDistance** {Number}, include results up to maxDistance from the point.\n - **distanceMultiplier** {Number}, include a value to multiply the distances with allowing for range conversions.\n - **query** {Object}, filter the results by a query.\n - **spherical** {Boolean, default:false}, perform query using a spherical model.\n - **uniqueDocs** {Boolean, default:false}, the closest location in a document to the center of the search region will always be returned MongoDB > 2.X.\n - **includeLocs** {Boolean, default:false}, include the location data fields in the top level of the results MongoDB > 2.X.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:527"
        },
        {
            "message": "Missing item type\nExecute a geo search using a geo haystack index on a collection.\n\nOptions\n - **maxDistance** {Number}, include results up to maxDistance from the point.\n - **search** {Object}, filter the results by a query.\n - **limit** {Number}, max number of results to return.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:550"
        },
        {
            "message": "Missing item type\nRetrieve all the indexes on the collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:568"
        },
        {
            "message": "Missing item type\nExecute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\n\nOptions\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **cursor** {Object}, return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n - **cursor.batchSize** {Number}, the batchSize for the cursor\n - **out** {String}, the collection name to where to write the results from the aggregation (MongoDB 2.6 or higher). Warning any existing collection will be overwritten.\n - **explain** {Boolean, default:false}, explain returns the aggregation execution plan (requires mongodb 2.6 >).\n - **allowDiskUse** {Boolean, default:false}, allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:579"
        },
        {
            "message": "Missing item type\nGet all the collection statistics.\n\nOptions\n - **scale** {Number}, divide the returned sizes by scale value.\n - **readPreference** {String}, the preferred read preference, require('mongodb').ReadPreference ((ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:598"
        },
        {
            "message": "Missing item type\nInitiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:612"
        },
        {
            "message": "Missing item type\nInitiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:628"
        },
        {
            "message": "Missing item type\nReturn N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\nno ordering guarantees for returned results.\n\nOptions\n - **readPreference** {String}, the prefered read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **batchSize** {Number, default:0}, set the batchSize for the getMoreCommand when iterating over the query results.\n - **numCursors**, {Number, 1} the maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:644"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:660"
        },
        {
            "message": "Missing item type\nExpose.",
            "line": " bin/node_modules/mongodb/lib/mongodb/collection.js:673"
        },
        {
            "message": "Missing item type\nClones a given cursor but uses new options",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:108"
        },
        {
            "message": "Missing item type\nResets this cursor to its initial state. All settings like the query string,\ntailable, batchSizeValue, skipValue and limits are preserved.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:117"
        },
        {
            "message": "Missing item type\nReturns an array of documents. The caller is responsible for making sure that there\nis enough memory to store the results. Note that the array only contain partial\nresults when this cursor had been previouly accessed. In that case,\ncursor.rewind() can be used to reset the cursor.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:144"
        },
        {
            "message": "Missing item type\nIterates over all the documents for this cursor. As with **{cursor.toArray}**,\nnot all of the elements will be iterated if this cursor had been previouly accessed.\nIn that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n**{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\nat any given time if batch size is specified. Otherwise, the caller is responsible\nfor making sure that the entire result can fit the memory.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:220"
        },
        {
            "message": "Missing item type\nDetermines how many result the query for this cursor will return",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:303"
        },
        {
            "message": "Missing item type\nSets the sort parameter of this cursor to the given value.\n\nThis method has the following method signatures:\n(keyOrList, callback)\n(keyOrList, direction, callback)",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:332"
        },
        {
            "message": "Missing item type\nSets the limit parameter of this cursor to the given value.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:366"
        },
        {
            "message": "Missing item type\nSpecifies a time limit for a query operation. After the specified\ntime is exceeded, the operation will be aborted and an error will be\nreturned to the client. If maxTimeMS is null, no limit is applied.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:403"
        },
        {
            "message": "Missing item type\nSets the read preference for the cursor",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:424"
        },
        {
            "message": "Missing item type\nSets the skip parameter of this cursor to the given value.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:453"
        },
        {
            "message": "Missing item type\nSets the batch size parameter of this cursor to the given value.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:480"
        },
        {
            "message": "Missing item type\nThe limit used for the getMore command",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:509"
        },
        {
            "message": "Missing item type\nGenerates a QueryCommand object using the parameters of this cursor.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:533"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:633"
        },
        {
            "message": "Missing item type\nConverts the value of the sort direction into its equivalent numerical value.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:643"
        },
        {
            "message": "Missing item type\nGets the next document from the cursor.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:658"
        },
        {
            "message": "Missing item type\nGets more results from the database if any.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:762"
        },
        {
            "message": "Missing item type\nGets a detailed information about how the query is performed on this cursor and how\nlong it took the database to process it.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:902"
        },
        {
            "message": "Missing item type\nReturns a Node Transform Stream interface for this cursor.\n\nOptions\n - **transform** {Function} function of type function(object) { return transformed }, allows for transformation of data before emitting.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:949"
        },
        {
            "message": "Missing item type\nClose the cursor.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:962"
        },
        {
            "message": "Missing item type\nCheck if the cursor is closed or open.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:996"
        },
        {
            "message": "Missing item type\nInit state",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1006"
        },
        {
            "message": "Missing item type\nCursor open",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1013"
        },
        {
            "message": "Missing item type\nCursor closed",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1020"
        },
        {
            "message": "Missing item type\nCursor performing a get more",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1027"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursor.js:1034"
        },
        {
            "message": "Missing item type\nModule dependecies.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:6"
        },
        {
            "message": "Missing item type\nInherit from Stream",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:47"
        },
        {
            "message": "Missing item type\nFlag stating whether or not this stream is readable.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:54"
        },
        {
            "message": "Missing item type\nFlag stating whether or not this stream is paused.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:59"
        },
        {
            "message": "Missing item type\nInitialize the cursor.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:64"
        },
        {
            "message": "Missing item type\nPull the next document from the cursor.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:74"
        },
        {
            "message": "Missing item type\nHandle each document as its returned from the cursor.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:93"
        },
        {
            "message": "Missing item type\nPauses the stream.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:115"
        },
        {
            "message": "Missing item type\nResumes the stream.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:124"
        },
        {
            "message": "Missing item type\nDestroys the stream, closing the underlying\ncursor. No more events will be emitted.",
            "line": " bin/node_modules/mongodb/lib/mongodb/cursorstream.js:143"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:224"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:238"
        },
        {
            "message": "Missing item type\nInitialize the database connection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:243"
        },
        {
            "message": "Missing item type\nCreate a new Db instance sharing the current socket connections.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:312"
        },
        {
            "message": "Missing item type\nClose the current db connection, including all the child db instances. Emits close event and calls optional callback.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:340"
        },
        {
            "message": "Missing item type\nAccess the Admin database",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:367"
        },
        {
            "message": "Missing item type\nDEPRECATED: Returns a cursor to all the collection information. Does not work with 2.8 or higher when using\nother storage engines",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:379"
        },
        {
            "message": "Missing item type\nGet the list of all collection names for the specified db\n\nOptions\n - **namesOnly** {String, default:false}, Return only the full collection namespace.\n - **filter** {String|Object, default:null}, Filter collections by this filter (string or object)",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:405"
        },
        {
            "message": "Missing item type\nGet the list of all collection names for the specified db\n\nOptions\n - **namesOnly** {String, default:false}, Return only the full collection namespace.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:485"
        },
        {
            "message": "Missing item type\nFetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\ncan use it without a callback in the following way. var collection = db.collection('mycollection');\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **raw** {Boolean, default:false}, perform all operations using raw bson objects.\n - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **strict**, (Boolean, default:false) returns an error if the collection does not exist",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:502"
        },
        {
            "message": "Missing item type\nFetch all collections for the current db.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:556"
        },
        {
            "message": "Missing item type\nEvaluate javascript on the server\n\nOptions\n - **nolock** {Boolean, default:false}, Tell MongoDB not to block on the evaulation of the javascript.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:577"
        },
        {
            "message": "Missing item type\nDereference a dbref, against a db",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:630"
        },
        {
            "message": "Missing item type\nLogout user from server, fire off on all connections and remove all auth info",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:649"
        },
        {
            "message": "Missing item type\nAuthenticate a user against the server.\nauthMechanism\nOptions\n - **authMechanism** {String, default:MONGODB-CR}, The authentication mechanism to use, GSSAPI or MONGODB-CR",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:687"
        },
        {
            "message": "Missing item type\nAdd a user to the database.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **customData**, (Object, default:{}) custom data associated with the user (only Mongodb 2.6 or higher)\n - **roles**, (Array, default:[]) roles associated with the created user (only Mongodb 2.6 or higher)",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:776"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:846"
        },
        {
            "message": "Missing item type\nRemove a user from a database\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:922"
        },
        {
            "message": "Missing item type\nCreates a collection on a server pre-allocating space, need to create f.ex capped collections.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n - **raw** {Boolean, default:false}, perform all operations using raw bson objects.\n - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n - **capped** {Boolean, default:false}, create a capped collection.\n - **size** {Number}, the size of the capped collection in bytes.\n - **max** {Number}, the maximum number of documents in the capped collection.\n - **autoIndexId** {Boolean, default:true}, create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version < 2.2.\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **strict**, (Boolean, default:false) throws an error if collection already exists",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1005"
        },
        {
            "message": "Missing item type\nExecute a command hash against MongoDB. This lets you acess any commands not available through the api on the server.\n\nOptions\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n - **maxTimeMS** {Number}, number of milliseconds to wait before aborting the query.\n - **ignoreCommandFilter** {Boolean}, overrides the default redirection of certain commands to primary.\n - **writeCommand** {Boolean, default: false}, signals this is a write command and to ignore read preferences\n - **checkKeys** {Boolean, default: false}, overrides the default not to check the key names for the command",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1077"
        },
        {
            "message": "Missing item type\nDrop a collection from the database, removing it permanently. New accesses will create a new collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1188"
        },
        {
            "message": "Missing item type\nRename a collection.\n\nOptions\n - **dropTarget** {Boolean, default:false}, drop the target name collection if it previously exists.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1211"
        },
        {
            "message": "Missing item type\nRuns a command on the database.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1239"
        },
        {
            "message": "Missing item type\nRuns a command on the database as admin.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1251"
        },
        {
            "message": "Missing item type\nCreates an index on the collection.\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **unique** {Boolean, default:false}, creates an unique index.\n - **sparse** {Boolean, default:false}, creates a sparse index.\n - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n - **v** {Number}, specify the format version of the indexes.\n - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1271"
        },
        {
            "message": "Missing item type\nEnsures that an index exists, if it does not it creates it\n\nOptions\n - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n - **j**, (Boolean, default:false) write waits for journal sync before returning\n - **unique** {Boolean, default:false}, creates an unique index.\n - **sparse** {Boolean, default:false}, creates a sparse index.\n - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n - **v** {Number}, specify the format version of the indexes.\n - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1438"
        },
        {
            "message": "Missing item type\nReturns the information available on allocated cursors.\n\nOptions\n - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1495"
        },
        {
            "message": "Missing item type\nDrop an index on a collection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1521"
        },
        {
            "message": "Missing item type\nReindex all indexes on the collection\nWarning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1546"
        },
        {
            "message": "Missing item type\nRetrieves this collections index info.\n\nOptions\n - **full** {Boolean, default:false}, returns the full raw index information.\n - **readPreference** {String}, the preferred read preference ((Server.PRIMARY, Server.PRIMARY_PREFERRED, Server.SECONDARY, Server.SECONDARY_PREFERRED, Server.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1571"
        },
        {
            "message": "Missing item type\nDrop a database.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1649"
        },
        {
            "message": "Missing item type\nGet all the db statistics.\n\nOptions\n - **scale** {Number}, divide the returned sizes by scale value.\n - **readPreference** {String}, the preferred read preference ((Server.PRIMARY, Server.PRIMARY_PREFERRED, Server.SECONDARY, Server.SECONDARY_PREFERRED, Server.NEAREST).",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1673"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1703"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1715"
        },
        {
            "message": "Missing item type\nExecute db query command (not safe)",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1829"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1924"
        },
        {
            "message": "Missing item type\nExecute an insert Command",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:1984"
        },
        {
            "message": "Missing item type\nUpdate command is the same",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2044"
        },
        {
            "message": "Missing item type\nRemove command is the same",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2050"
        },
        {
            "message": "Missing item type\nWrap a Mongo error document into an Error instance.\nDeprecated. Use utils.toError instead.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2057"
        },
        {
            "message": "Missing item type\nDefault URL",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2067"
        },
        {
            "message": "Missing item type\nConnect to MongoDB using a url as documented at\n\n docs.mongodb.org/manual/reference/connection-string/\n\nOptions\n - **uri_decode_auth** {Boolean, default:false} uri decode the user name and password for authentication\n - **db** {Object, default: null} a hash off options to set on the db object, see **Db constructor**\n - **server** {Object, default: null} a hash off options to set on the server objects, see **Server** constructor**\n - **replSet** {Object, default: null} a hash off options to set on the replSet object, see **ReplSet** constructor**\n - **mongos** {Object, default: null} a hash off options to set on the mongos object, see **Mongos** constructor**",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2074"
        },
        {
            "message": "Missing item type\nState of the db connection",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2111"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2121"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2133"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2146"
        },
        {
            "message": "Missing item type\nLegacy support",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2175"
        },
        {
            "message": "Missing item type\nRemove all listeners to the db instance.",
            "line": " bin/node_modules/mongodb/lib/mongodb/db.js:2184"
        },
        {
            "message": "Missing item type",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:46"
        },
        {
            "message": "Missing item type\nConnect to MongoDB using a url as documented at\n\n docs.mongodb.org/manual/reference/connection-string/\n\nOptions\n - **uri_decode_auth** {Boolean, default:false} uri decode the user name and password for authentication\n - **db** {Object, default: null} a hash off options to set on the db object, see **Db constructor**\n - **server** {Object, default: null} a hash off options to set on the server objects, see **Server** constructor**\n - **replSet** {Object, default: null} a hash off options to set on the replSet object, see **ReplSet** constructor**\n - **mongos** {Object, default: null} a hash off options to set on the mongos object, see **Mongos** constructor**",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:51"
        },
        {
            "message": "Missing item type\nInitialize the database connection.",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:87"
        },
        {
            "message": "Missing item type\nClose the current db connection, including all the child db instances. Emits close event and calls optional callback.",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:107"
        },
        {
            "message": "Missing item type\nCreate a new Db instance sharing the current socket connections.",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:118"
        },
        {
            "message": "Missing item type\nConnect to MongoDB using a url as documented at\n\n docs.mongodb.org/manual/reference/connection-string/\n\nOptions\n - **uri_decode_auth** {Boolean, default:false} uri decode the user name and password for authentication\n - **db** {Object, default: null} a hash off options to set on the db object, see **Db constructor**\n - **server** {Object, default: null} a hash off options to set on the server objects, see **Server** constructor**\n - **replSet** {Object, default: null} a hash off options to set on the replSet object, see **ReplSet** constructor**\n - **mongos** {Object, default: null} a hash off options to set on the mongos object, see **Mongos** constructor**",
            "line": " bin/node_modules/mongodb/lib/mongodb/mongo_client.js:129"
        },
        {
            "message": "Missing item type\nSort functions, Normalize and prepare sort parameters",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:3"
        },
        {
            "message": "Missing item type\nContext insensitive type checks",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:82"
        },
        {
            "message": "Missing item type\nWrap a Mongo error document in an Error instance",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:105"
        },
        {
            "message": "Missing item type\nConvert a single level object to an array",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:130"
        },
        {
            "message": "Missing item type\nHandle single command document return",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:145"
        },
        {
            "message": "Missing item type\nReturn correct processor",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:166"
        },
        {
            "message": "Missing item type\nAllow setting the socketTimeoutMS on all connections\nto work around issues such as secondaries blocking due to compaction",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:178"
        },
        {
            "message": "Missing item type\nDetermine if the server supports write commands",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:202"
        },
        {
            "message": "Missing item type\nFetch server capabilities",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:212"
        },
        {
            "message": "Missing item type\nCreate index name based on field spec",
            "line": " bin/node_modules/mongodb/lib/mongodb/utils.js:222"
        },
        {
            "message": "Missing item type\nopen a file or uri using the default application for the file type.",
            "line": " bin/node_modules/open/lib/open.js:6"
        },
        {
            "message": "Missing item type\nPOŁĄCZNIE Z WARSTWĄ WEBOWĄ",
            "line": " bin/node_modules/prometheus-business-layer/biz-layer-jsonrpc-server.js:10"
        },
        {
            "message": "Missing item type\nWhether a given value can be stored in this field type instance",
            "line": " bin/node_modules/prometheus-field-type/field-type.js:12"
        },
        {
            "message": "Missing item type\nimplements @link FieldType~isProperValue",
            "line": " bin/node_modules/prometheus-field-type-manager/types/association.js:21"
        },
        {
            "message": "Missing item type\nStores and manages Field Types",
            "line": " bin/node_modules/prometheus-field-type-manager/field-type-manager.js:9"
        },
        {
            "message": "Missing item type\nCalls callback function with `true` if a resource with given ID exists in the database. Otherwise,",
            "line": " bin/node_modules/prometheus-resource-manager/resource-manager.js:30"
        },
        {
            "message": "Missing item type\nCallback for idExists",
            "line": " bin/node_modules/prometheus-resource-manager/resource-manager.js:57"
        },
        {
            "message": "Missing item type\nAdds a field to the ResourceType instance",
            "line": " bin/node_modules/prometheus-resource-type/resource-type.js:29"
        },
        {
            "message": "Missing item type\nChecks if given field_values can be stored in this Resource Type",
            "line": " bin/node_modules/prometheus-resource-type/resource-type.js:41"
        },
        {
            "message": "Missing item type\nShorthand for ResourceTypeField.type.isProperValue",
            "line": " bin/node_modules/prometheus-resource-type-field/resource-type-field.js:12"
        },
        {
            "message": "Missing item type\nThrows an error if a resource type of given name has not been registered",
            "line": " bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js:18"
        },
        {
            "message": "Missing item type\nCreates a new resource type",
            "line": " bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js:29"
        },
        {
            "message": "Missing item type\nGet a resource type object by name",
            "line": " bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js:44"
        },
        {
            "message": "Missing item type\nWhether a resource type by given name has already been registered",
            "line": " bin/node_modules/prometheus-resource-type-manager/resource-type-manager.js:53"
        },
        {
            "message": "Missing item type\nTake a potentially misbehaving resolver function and make sure\nonFulfilled and onRejected are only called once.\n\nMakes no guarantees about asynchrony.",
            "line": " bin/node_modules/promise/lib/core.js:82"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io/lib/client.js:2"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io/lib/client.js:9"
        },
        {
            "message": "Missing item type\nClient constructor.",
            "line": " bin/node_modules/socket.io/lib/client.js:15"
        },
        {
            "message": "Missing item type\nSets up event listeners.",
            "line": " bin/node_modules/socket.io/lib/client.js:36"
        },
        {
            "message": "Missing item type\nConnects a client to a namespace.",
            "line": " bin/node_modules/socket.io/lib/client.js:51"
        },
        {
            "message": "Missing item type\nDisconnects from all namespaces and closes transport.",
            "line": " bin/node_modules/socket.io/lib/client.js:82"
        },
        {
            "message": "Missing item type\nRemoves a socket. Called by each `Socket`.",
            "line": " bin/node_modules/socket.io/lib/client.js:98"
        },
        {
            "message": "Missing item type\nCloses the underlying connection.",
            "line": " bin/node_modules/socket.io/lib/client.js:115"
        },
        {
            "message": "Missing item type\nWrites a packet to the transport.",
            "line": " bin/node_modules/socket.io/lib/client.js:129"
        },
        {
            "message": "Missing item type\nCalled with incoming transport data.",
            "line": " bin/node_modules/socket.io/lib/client.js:163"
        },
        {
            "message": "Missing item type\nCalled when parser fully decodes a packet.",
            "line": " bin/node_modules/socket.io/lib/client.js:173"
        },
        {
            "message": "Missing item type\nCalled upon transport close.",
            "line": " bin/node_modules/socket.io/lib/client.js:192"
        },
        {
            "message": "Missing item type\nCleans up event listeners.",
            "line": " bin/node_modules/socket.io/lib/client.js:214"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io/lib/index.js:2"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io/lib/index.js:18"
        },
        {
            "message": "Missing item type\nSocket.IO client source.",
            "line": " bin/node_modules/socket.io/lib/index.js:24"
        },
        {
            "message": "Missing item type\nServer constructor.",
            "line": " bin/node_modules/socket.io/lib/index.js:30"
        },
        {
            "message": "Missing item type\nServer request verification function, that checks for allowed origins",
            "line": " bin/node_modules/socket.io/lib/index.js:54"
        },
        {
            "message": "Missing item type\nSets/gets whether client code is being served.",
            "line": " bin/node_modules/socket.io/lib/index.js:84"
        },
        {
            "message": "Missing item type\nOld settings for backwards compatibility",
            "line": " bin/node_modules/socket.io/lib/index.js:98"
        },
        {
            "message": "Missing item type\nBackwards compatiblity.",
            "line": " bin/node_modules/socket.io/lib/index.js:109"
        },
        {
            "message": "Missing item type\nSets the client serving path.",
            "line": " bin/node_modules/socket.io/lib/index.js:137"
        },
        {
            "message": "Missing item type\nSets the adapter for rooms.",
            "line": " bin/node_modules/socket.io/lib/index.js:151"
        },
        {
            "message": "Missing item type\nSets the allowed origins for requests.",
            "line": " bin/node_modules/socket.io/lib/index.js:170"
        },
        {
            "message": "Missing item type\nAttaches socket.io to a server or port.",
            "line": " bin/node_modules/socket.io/lib/index.js:185"
        },
        {
            "message": "Missing item type\nAttaches the static file serving.",
            "line": " bin/node_modules/socket.io/lib/index.js:240"
        },
        {
            "message": "Missing item type\nHandles a request serving `/socket.io.js`",
            "line": " bin/node_modules/socket.io/lib/index.js:264"
        },
        {
            "message": "Missing item type\nBinds socket.io to an engine.io instance.",
            "line": " bin/node_modules/socket.io/lib/index.js:290"
        },
        {
            "message": "Missing item type\nCalled with each incoming transport connection.",
            "line": " bin/node_modules/socket.io/lib/index.js:304"
        },
        {
            "message": "Missing item type\nLooks up a namespace.",
            "line": " bin/node_modules/socket.io/lib/index.js:319"
        },
        {
            "message": "Missing item type\nCloses server connection",
            "line": " bin/node_modules/socket.io/lib/index.js:339"
        },
        {
            "message": "Missing item type\nExpose main namespace (/).",
            "line": " bin/node_modules/socket.io/lib/index.js:357"
        },
        {
            "message": "Missing item type\nBC with `io.listen`",
            "line": " bin/node_modules/socket.io/lib/index.js:375"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:2"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:12"
        },
        {
            "message": "Missing item type\nBlacklisted events.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:18"
        },
        {
            "message": "Missing item type\nFlags.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:28"
        },
        {
            "message": "Missing item type\n`EventEmitter#emit` reference.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:34"
        },
        {
            "message": "Missing item type\nNamespace constructor.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:40"
        },
        {
            "message": "Missing item type\nInherits from `EventEmitter`.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:59"
        },
        {
            "message": "Missing item type\nApply flags from `Socket`.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:65"
        },
        {
            "message": "Missing item type\nInitializes the `Adapter` for this nsp.\nRun upon changing adapter by `Server#adapter`\nin addition to the constructor.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:77"
        },
        {
            "message": "Missing item type\nSets up namespace middleware.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:89"
        },
        {
            "message": "Missing item type\nExecutes the middleware for an incoming client.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:101"
        },
        {
            "message": "Missing item type\nTargets a room when emitting.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:129"
        },
        {
            "message": "Missing item type\nAdds a new client.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:144"
        },
        {
            "message": "Missing item type\nRemoves a client. Called by each `Socket`.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:181"
        },
        {
            "message": "Missing item type\nEmits to all clients.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:196"
        },
        {
            "message": "Missing item type\nSends a `message` event to all clients.",
            "line": " bin/node_modules/socket.io/lib/namespace.js:229"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io/lib/socket.js:2"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io/lib/socket.js:12"
        },
        {
            "message": "Missing item type\nBlacklisted events.",
            "line": " bin/node_modules/socket.io/lib/socket.js:18"
        },
        {
            "message": "Missing item type\nFlags.",
            "line": " bin/node_modules/socket.io/lib/socket.js:32"
        },
        {
            "message": "Missing item type\n`EventEmitter#emit` reference.",
            "line": " bin/node_modules/socket.io/lib/socket.js:44"
        },
        {
            "message": "Missing item type\nInterface to a `Client` for a given `Namespace`.",
            "line": " bin/node_modules/socket.io/lib/socket.js:50"
        },
        {
            "message": "Missing item type\nInherits from `EventEmitter`.",
            "line": " bin/node_modules/socket.io/lib/socket.js:73"
        },
        {
            "message": "Missing item type\nApply flags from `Socket`.",
            "line": " bin/node_modules/socket.io/lib/socket.js:79"
        },
        {
            "message": "Missing item type\n`request` engine.io shorcut.",
            "line": " bin/node_modules/socket.io/lib/socket.js:91"
        },
        {
            "message": "Missing item type\nBuilds the `handshake` BC object",
            "line": " bin/node_modules/socket.io/lib/socket.js:101"
        },
        {
            "message": "Missing item type\nEmits to this client.",
            "line": " bin/node_modules/socket.io/lib/socket.js:120"
        },
        {
            "message": "Missing item type\nTargets a room when broadcasting.",
            "line": " bin/node_modules/socket.io/lib/socket.js:165"
        },
        {
            "message": "Missing item type\nSends a `message` event.",
            "line": " bin/node_modules/socket.io/lib/socket.js:180"
        },
        {
            "message": "Missing item type\nWrites a packet.",
            "line": " bin/node_modules/socket.io/lib/socket.js:195"
        },
        {
            "message": "Missing item type\nJoins a room.",
            "line": " bin/node_modules/socket.io/lib/socket.js:208"
        },
        {
            "message": "Missing item type\nLeaves a room.",
            "line": " bin/node_modules/socket.io/lib/socket.js:230"
        },
        {
            "message": "Missing item type\nLeave all rooms.",
            "line": " bin/node_modules/socket.io/lib/socket.js:251"
        },
        {
            "message": "Missing item type\nCalled by `Namespace` upon succesful\nmiddleware execution (ie: authorization).",
            "line": " bin/node_modules/socket.io/lib/socket.js:262"
        },
        {
            "message": "Missing item type\nCalled with each packet. Called by `Client`.",
            "line": " bin/node_modules/socket.io/lib/socket.js:276"
        },
        {
            "message": "Missing item type\nCalled upon event packet.",
            "line": " bin/node_modules/socket.io/lib/socket.js:311"
        },
        {
            "message": "Missing item type\nProduces an ack callback to emit with an event.",
            "line": " bin/node_modules/socket.io/lib/socket.js:330"
        },
        {
            "message": "Missing item type\nCalled upon ack packet.",
            "line": " bin/node_modules/socket.io/lib/socket.js:355"
        },
        {
            "message": "Missing item type\nCalled upon client disconnect packet.",
            "line": " bin/node_modules/socket.io/lib/socket.js:372"
        },
        {
            "message": "Missing item type\nCalled upon closing. Called by `Client`.",
            "line": " bin/node_modules/socket.io/lib/socket.js:383"
        },
        {
            "message": "Missing item type\nProduces an `error` packet.",
            "line": " bin/node_modules/socket.io/lib/socket.js:402"
        },
        {
            "message": "Missing item type\nDisconnects this client.",
            "line": " bin/node_modules/socket.io/lib/socket.js:413"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/lib/index.js:2"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/lib/index.js:11"
        },
        {
            "message": "Missing item type\nManagers cache.",
            "line": " bin/node_modules/socket.io-client/lib/index.js:17"
        },
        {
            "message": "Missing item type\nLooks up an existing `Manager` for multiplexing.\nIf the user summons:\n\n  `io('http://localhost/a');`\n  `io('http://localhost/b');`\n\nWe reuse the existing instance based on same scheme/port/host,\nand we initialize sockets for each namespace.",
            "line": " bin/node_modules/socket.io-client/lib/index.js:23"
        },
        {
            "message": "Missing item type\nProtocol version.",
            "line": " bin/node_modules/socket.io-client/lib/index.js:63"
        },
        {
            "message": "Missing item type\n`connect`.",
            "line": " bin/node_modules/socket.io-client/lib/index.js:71"
        },
        {
            "message": "Missing item type\nExpose constructors for standalone build.",
            "line": " bin/node_modules/socket.io-client/lib/index.js:80"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:2"
        },
        {
            "message": "Missing item type\nModule exports",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:17"
        },
        {
            "message": "Missing item type\n`Manager` constructor.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:23"
        },
        {
            "message": "Missing item type\nPropagate given event to sockets and emit on `this`",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:60"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:73"
        },
        {
            "message": "Missing item type\nSets the `reconnection` config.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:79"
        },
        {
            "message": "Missing item type\nSets the reconnection attempts config.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:93"
        },
        {
            "message": "Missing item type\nSets the delay between reconnections.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:107"
        },
        {
            "message": "Missing item type\nSets the maximum delay between reconnections.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:121"
        },
        {
            "message": "Missing item type\nSets the connection timeout. `false` to disable",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:135"
        },
        {
            "message": "Missing item type\nStarts trying to reconnect if reconnection is enabled and we have not\nstarted reconnecting yet",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:148"
        },
        {
            "message": "Missing item type\nSets the current transport `socket`.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:165"
        },
        {
            "message": "Missing item type\nCalled upon transport open.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:233"
        },
        {
            "message": "Missing item type\nCalled with data.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:257"
        },
        {
            "message": "Missing item type\nCalled when parser fully decodes a packet.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:267"
        },
        {
            "message": "Missing item type\nCalled upon socket error.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:277"
        },
        {
            "message": "Missing item type\nCreates a new socket for the given `nsp`.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:288"
        },
        {
            "message": "Missing item type\nCalled upon a socket close.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:310"
        },
        {
            "message": "Missing item type\nWrites a packet.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:324"
        },
        {
            "message": "Missing item type\nIf packet buffer is non-empty, begins encoding the\nnext packet in line.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:350"
        },
        {
            "message": "Missing item type\nClean up transport subscriptions and packet buffer.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:364"
        },
        {
            "message": "Missing item type\nClose the current socket.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:380"
        },
        {
            "message": "Missing item type\nCalled upon engine close.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:393"
        },
        {
            "message": "Missing item type\nAttempt a reconnection.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:409"
        },
        {
            "message": "Missing item type\nCalled upon successful reconnect.",
            "line": " bin/node_modules/socket.io-client/lib/manager.js:462"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/lib/on.js:2"
        },
        {
            "message": "Missing item type\nHelper for subscriptions.",
            "line": " bin/node_modules/socket.io-client/lib/on.js:8"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:2"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:14"
        },
        {
            "message": "Missing item type\nInternal events (blacklisted).\nThese events can't be emitted by the user.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:20"
        },
        {
            "message": "Missing item type\nShortcut to `Emitter#emit`.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:40"
        },
        {
            "message": "Missing item type\n`Socket` constructor.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:46"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:65"
        },
        {
            "message": "Missing item type\nSubscribe to open, close and packet events",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:71"
        },
        {
            "message": "Missing item type\n\"Opens\" the socket.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:88"
        },
        {
            "message": "Missing item type\nSends a `message` event.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:104"
        },
        {
            "message": "Missing item type\nOverride `emit`.\nIf the event is in `events`, it's emitted normally.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:118"
        },
        {
            "message": "Missing item type\nSends a packet.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:154"
        },
        {
            "message": "Missing item type\nCalled upon engine `open`.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:166"
        },
        {
            "message": "Missing item type\nCalled upon engine `close`.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:181"
        },
        {
            "message": "Missing item type\nCalled with socket packet.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:195"
        },
        {
            "message": "Missing item type\nCalled upon a server event.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:236"
        },
        {
            "message": "Missing item type\nProduces an ack callback to emit with an event.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:259"
        },
        {
            "message": "Missing item type\nCalled upon a server acknowlegement.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:284"
        },
        {
            "message": "Missing item type\nCalled upon server connect.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:298"
        },
        {
            "message": "Missing item type\nEmit buffered events (received and emitted).",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:311"
        },
        {
            "message": "Missing item type\nCalled upon server disconnect.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:330"
        },
        {
            "message": "Missing item type\nCalled upon forced client/server side disconnections,\nthis method ensures the manager stops tracking us and\nthat reconnections don't get triggered for this.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:342"
        },
        {
            "message": "Missing item type\nDisconnects the socket manually.",
            "line": " bin/node_modules/socket.io-client/lib/socket.js:362"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/lib/url.js:2"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/lib/url.js:9"
        },
        {
            "message": "Missing item type\nURL parser.",
            "line": " bin/node_modules/socket.io-client/lib/url.js:15"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:7"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:16"
        },
        {
            "message": "Missing item type\nManagers cache.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:22"
        },
        {
            "message": "Missing item type\nLooks up an existing `Manager` for multiplexing.\nIf the user summons:\n\n  `io('http://localhost/a');`\n  `io('http://localhost/b');`\n\nWe reuse the existing instance based on same scheme/port/host,\nand we initialize sockets for each namespace.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:28"
        },
        {
            "message": "Missing item type\nProtocol version.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:68"
        },
        {
            "message": "Missing item type\n`connect`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:76"
        },
        {
            "message": "Missing item type\nExpose constructors for standalone build.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:85"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:96"
        },
        {
            "message": "Missing item type\nModule exports",
            "line": " bin/node_modules/socket.io-client/socket.io.js:111"
        },
        {
            "message": "Missing item type\n`Manager` constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:117"
        },
        {
            "message": "Missing item type\nPropagate given event to sockets and emit on `this`",
            "line": " bin/node_modules/socket.io-client/socket.io.js:154"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:167"
        },
        {
            "message": "Missing item type\nSets the `reconnection` config.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:173"
        },
        {
            "message": "Missing item type\nSets the reconnection attempts config.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:187"
        },
        {
            "message": "Missing item type\nSets the delay between reconnections.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:201"
        },
        {
            "message": "Missing item type\nSets the maximum delay between reconnections.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:215"
        },
        {
            "message": "Missing item type\nSets the connection timeout. `false` to disable",
            "line": " bin/node_modules/socket.io-client/socket.io.js:229"
        },
        {
            "message": "Missing item type\nStarts trying to reconnect if reconnection is enabled and we have not\nstarted reconnecting yet",
            "line": " bin/node_modules/socket.io-client/socket.io.js:242"
        },
        {
            "message": "Missing item type\nSets the current transport `socket`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:259"
        },
        {
            "message": "Missing item type\nCalled upon transport open.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:327"
        },
        {
            "message": "Missing item type\nCalled with data.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:351"
        },
        {
            "message": "Missing item type\nCalled when parser fully decodes a packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:361"
        },
        {
            "message": "Missing item type\nCalled upon socket error.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:371"
        },
        {
            "message": "Missing item type\nCreates a new socket for the given `nsp`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:382"
        },
        {
            "message": "Missing item type\nCalled upon a socket close.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:404"
        },
        {
            "message": "Missing item type\nWrites a packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:418"
        },
        {
            "message": "Missing item type\nIf packet buffer is non-empty, begins encoding the\nnext packet in line.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:444"
        },
        {
            "message": "Missing item type\nClean up transport subscriptions and packet buffer.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:458"
        },
        {
            "message": "Missing item type\nClose the current socket.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:474"
        },
        {
            "message": "Missing item type\nCalled upon engine close.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:487"
        },
        {
            "message": "Missing item type\nAttempt a reconnection.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:503"
        },
        {
            "message": "Missing item type\nCalled upon successful reconnect.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:556"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:571"
        },
        {
            "message": "Missing item type\nHelper for subscriptions.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:577"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:597"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:609"
        },
        {
            "message": "Missing item type\nInternal events (blacklisted).\nThese events can't be emitted by the user.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:615"
        },
        {
            "message": "Missing item type\nShortcut to `Emitter#emit`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:635"
        },
        {
            "message": "Missing item type\n`Socket` constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:641"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:660"
        },
        {
            "message": "Missing item type\nSubscribe to open, close and packet events",
            "line": " bin/node_modules/socket.io-client/socket.io.js:666"
        },
        {
            "message": "Missing item type\n\"Opens\" the socket.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:683"
        },
        {
            "message": "Missing item type\nSends a `message` event.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:699"
        },
        {
            "message": "Missing item type\nOverride `emit`.\nIf the event is in `events`, it's emitted normally.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:713"
        },
        {
            "message": "Missing item type\nSends a packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:749"
        },
        {
            "message": "Missing item type\nCalled upon engine `open`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:761"
        },
        {
            "message": "Missing item type\nCalled upon engine `close`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:776"
        },
        {
            "message": "Missing item type\nCalled with socket packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:790"
        },
        {
            "message": "Missing item type\nCalled upon a server event.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:831"
        },
        {
            "message": "Missing item type\nProduces an ack callback to emit with an event.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:854"
        },
        {
            "message": "Missing item type\nCalled upon a server acknowlegement.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:879"
        },
        {
            "message": "Missing item type\nCalled upon server connect.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:893"
        },
        {
            "message": "Missing item type\nEmit buffered events (received and emitted).",
            "line": " bin/node_modules/socket.io-client/socket.io.js:906"
        },
        {
            "message": "Missing item type\nCalled upon server disconnect.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:925"
        },
        {
            "message": "Missing item type\nCalled upon forced client/server side disconnections,\nthis method ensures the manager stops tracking us and\nthat reconnections don't get triggered for this.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:937"
        },
        {
            "message": "Missing item type\nDisconnects the socket manually.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:957"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:984"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:991"
        },
        {
            "message": "Missing item type\nURL parser.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:997"
        },
        {
            "message": "Missing item type\nSlice reference.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1059"
        },
        {
            "message": "Missing item type\nBind `obj` to `fn`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1065"
        },
        {
            "message": "Missing item type\nExpose `Emitter`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1085"
        },
        {
            "message": "Missing item type\nInitialize a new `Emitter`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1091"
        },
        {
            "message": "Missing item type\nMixin the emitter properties.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1101"
        },
        {
            "message": "Missing item type\nListen on the given `event` with `fn`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1116"
        },
        {
            "message": "Missing item type\nAdds an `event` listener that will be invoked a single\ntime then automatically removed.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1133"
        },
        {
            "message": "Missing item type\nRemove the given callback for `event` or all\nregistered callbacks.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1157"
        },
        {
            "message": "Missing item type\nEmit `event` with the given args.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1201"
        },
        {
            "message": "Missing item type\nReturn array of callbacks for `event`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1224"
        },
        {
            "message": "Missing item type\nCheck if this emitter has `event` handlers.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1237"
        },
        {
            "message": "Missing item type\nExpose `debug()` as the module.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1251"
        },
        {
            "message": "Missing item type\nCreate a debugger with the given `name`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1257"
        },
        {
            "message": "Missing item type\nThe currently active debug mode names.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1288"
        },
        {
            "message": "Missing item type\nEnables a debug mode by name. This can include modes\nseparated by a colon and wildcards.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1295"
        },
        {
            "message": "Missing item type\nDisable debug output.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1322"
        },
        {
            "message": "Missing item type\nHumanize the given `ms`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1332"
        },
        {
            "message": "Missing item type\nReturns true if the given mode name is enabled, false otherwise.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1351"
        },
        {
            "message": "Missing item type\nCoerce `val`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1373"
        },
        {
            "message": "Missing item type\nExports parser",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1396"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1406"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1419"
        },
        {
            "message": "Missing item type\nNoop function.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1425"
        },
        {
            "message": "Missing item type\nSocket constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1433"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1497"
        },
        {
            "message": "Missing item type\nProtocol version.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1503"
        },
        {
            "message": "Missing item type\nExpose deps for legacy compatibility\nand standalone browser access.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1511"
        },
        {
            "message": "Missing item type\nCreates transport of the given type.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1521"
        },
        {
            "message": "Missing item type\nInitializes transport to use and starts probe.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1572"
        },
        {
            "message": "Missing item type\nSets the current transport. Disables the existing one (if any).",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1607"
        },
        {
            "message": "Missing item type\nProbes a transport.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1641"
        },
        {
            "message": "Missing item type\nCalled when connection is deemed open.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1759"
        },
        {
            "message": "Missing item type\nHandles a packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1782"
        },
        {
            "message": "Missing item type\nCalled upon handshake completion.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1822"
        },
        {
            "message": "Missing item type\nResets ping timeout.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1846"
        },
        {
            "message": "Missing item type\nPings server every `this.pingInterval` and expects response\nwithin `this.pingTimeout` or closes connection.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1861"
        },
        {
            "message": "Missing item type\nSends a ping packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1878"
        },
        {
            "message": "Missing item type\nCalled on `drain` event",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1888"
        },
        {
            "message": "Missing item type\nFlush write buffers.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1916"
        },
        {
            "message": "Missing item type\nSends a message.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1934"
        },
        {
            "message": "Missing item type\nSends a packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1949"
        },
        {
            "message": "Missing item type\nCloses the connection.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:1970"
        },
        {
            "message": "Missing item type\nCalled upon transport error",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2018"
        },
        {
            "message": "Missing item type\nCalled upon transport close.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2031"
        },
        {
            "message": "Missing item type\nFilters upgrades, returning only those matching client transports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2074"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2092"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2099"
        },
        {
            "message": "Missing item type\nTransport abstract constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2105"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2126"
        },
        {
            "message": "Missing item type\nA counter used to prevent collisions in the timestamps used\nfor cache busting.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2132"
        },
        {
            "message": "Missing item type\nEmits an error.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2139"
        },
        {
            "message": "Missing item type\nOpens the transport.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2155"
        },
        {
            "message": "Missing item type\nCloses the transport.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2170"
        },
        {
            "message": "Missing item type\nSends multiple packets.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2185"
        },
        {
            "message": "Missing item type\nCalled upon open",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2200"
        },
        {
            "message": "Missing item type\nCalled with data.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2212"
        },
        {
            "message": "Missing item type\nCalled with a decoded packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2224"
        },
        {
            "message": "Missing item type\nCalled upon close.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2232"
        },
        {
            "message": "Missing item type\nModule dependencies",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2245"
        },
        {
            "message": "Missing item type\nExport transports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2254"
        },
        {
            "message": "Missing item type\nPolling transport polymorphic constructor.\nDecides on xhr vs jsonp based on feature detection.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2261"
        },
        {
            "message": "Missing item type\nModule requirements.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2303"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2310"
        },
        {
            "message": "Missing item type\nCached regular expressions.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2316"
        },
        {
            "message": "Missing item type\nGlobal JSONP callbacks.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2323"
        },
        {
            "message": "Missing item type\nCallbacks count.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2329"
        },
        {
            "message": "Missing item type\nNoop.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2335"
        },
        {
            "message": "Missing item type\nJSONP Polling constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2341"
        },
        {
            "message": "Missing item type\nInherits from Polling.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2381"
        },
        {
            "message": "Missing item type\nCloses the socket.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2393"
        },
        {
            "message": "Missing item type\nStarts a poll cycle.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2414"
        },
        {
            "message": "Missing item type\nWrites with a hidden iframe.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2450"
        },
        {
            "message": "Missing item type\nModule requirements.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2539"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2549"
        },
        {
            "message": "Missing item type\nEmpty function",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2556"
        },
        {
            "message": "Missing item type\nXHR Polling constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2562"
        },
        {
            "message": "Missing item type\nInherits from Polling.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2587"
        },
        {
            "message": "Missing item type\nXHR supports binary",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2593"
        },
        {
            "message": "Missing item type\nCreates a request.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2599"
        },
        {
            "message": "Missing item type\nSends data.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2617"
        },
        {
            "message": "Missing item type\nStarts a poll cycle.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2636"
        },
        {
            "message": "Missing item type\nRequest constructor",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2655"
        },
        {
            "message": "Missing item type\nMix in `Emitter`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2676"
        },
        {
            "message": "Missing item type\nCreates the XHR object and sends the request.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2682"
        },
        {
            "message": "Missing item type\nCalled upon successful response.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2756"
        },
        {
            "message": "Missing item type\nCalled if we have data.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2767"
        },
        {
            "message": "Missing item type\nCalled upon error.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2778"
        },
        {
            "message": "Missing item type\nCleans up house.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2789"
        },
        {
            "message": "Missing item type\nCalled upon load.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2817"
        },
        {
            "message": "Missing item type\nCheck if it has XDomainRequest.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2847"
        },
        {
            "message": "Missing item type\nAborts the request.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2857"
        },
        {
            "message": "Missing item type\nAborts pending requests when unloading the window. This is needed to prevent\nmemory leaks (e.g. when using IE) and to ensure that no spurious error is\nemitted.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2867"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2893"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2903"
        },
        {
            "message": "Missing item type\nIs XHR2 supported?",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2909"
        },
        {
            "message": "Missing item type\nPolling interface.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2919"
        },
        {
            "message": "Missing item type\nInherits from Transport.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2934"
        },
        {
            "message": "Missing item type\nTransport name.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2940"
        },
        {
            "message": "Missing item type\nOpens the socket (triggers polling). We write a PING message to determine\nwhen the transport is open.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2946"
        },
        {
            "message": "Missing item type\nPauses polling.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:2957"
        },
        {
            "message": "Missing item type\nStarts polling cycle.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3001"
        },
        {
            "message": "Missing item type\nOverloads onData to detect payloads.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3014"
        },
        {
            "message": "Missing item type\nFor polling, send a close packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3056"
        },
        {
            "message": "Missing item type\nWrites a packets payload.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3081"
        },
        {
            "message": "Missing item type\nGenerates uri for connection.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3103"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3140"
        },
        {
            "message": "Missing item type\n`ws` exposes a WebSocket-compatible interface in\nNode, or the `WebSocket` or `MozWebSocket` globals\nin the browser.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3150"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3158"
        },
        {
            "message": "Missing item type\nWebSocket transport constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3164"
        },
        {
            "message": "Missing item type\nInherits from Transport.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3179"
        },
        {
            "message": "Missing item type\nTransport name.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3185"
        },
        {
            "message": "Missing item type\nOpens socket.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3199"
        },
        {
            "message": "Missing item type\nAdds event listeners to the socket",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3226"
        },
        {
            "message": "Missing item type\nOverride `onData` to use a timer on iOS.\nSee: https://gist.github.com/mloughran/2052006",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3249"
        },
        {
            "message": "Missing item type\nWrites data to socket.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3266"
        },
        {
            "message": "Missing item type\nCalled upon close",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3300"
        },
        {
            "message": "Missing item type\nCloses socket.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3310"
        },
        {
            "message": "Missing item type\nGenerates uri for connection.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3322"
        },
        {
            "message": "Missing item type\nFeature detection for WebSocket.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3359"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3418"
        },
        {
            "message": "Missing item type\nCheck if we are running an android browser. That requires us to use\nArrayBuffer with polling transports...\n\nhttp://ghinda.net/jpeg-blob-ajax-android/",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3428"
        },
        {
            "message": "Missing item type\nCurrent protocol version.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3437"
        },
        {
            "message": "Missing item type\nPacket types.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3443"
        },
        {
            "message": "Missing item type\nPremade error packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3459"
        },
        {
            "message": "Missing item type\nCreate a blob api even for blob builder when vendor prefixes exist",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3465"
        },
        {
            "message": "Missing item type\nEncodes a packet.\n\n    <packet type id> [ <data> ]\n\nExample:\n\n    5hello world\n    3\n    4\n\nBinary is encoded in an identical principle",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3471"
        },
        {
            "message": "Missing item type\nEncode packet helpers for binary types",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3520"
        },
        {
            "message": "Missing item type\nEncodes a packet with binary data in a base64 string",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3570"
        },
        {
            "message": "Missing item type\nDecodes a packet. Changes format to Blob if requested.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3604"
        },
        {
            "message": "Missing item type\nDecodes a packet encoded in a base64 string",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3647"
        },
        {
            "message": "Missing item type\nEncodes multiple messages (payload).\n\n    <length>:data\n\nExample:\n\n    11:hello world2:hi\n\nIf any contents are binary, they will be encoded as base64 strings. Base64\nencoded strings are marked with a b before the length specifier",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3669"
        },
        {
            "message": "Missing item type\nAsync array map using after",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3718"
        },
        {
            "message": "Missing item type\nEncodes multiple messages (payload) as binary.\n\n<1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n255><data>\n\nExample:\n1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3808"
        },
        {
            "message": "Missing item type\nEncode as Blob",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3880"
        },
        {
            "message": "Missing item type\nGets the keys for an object.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:3988"
        },
        {
            "message": "Missing item type\nAn abstraction for slicing an arraybuffer even when\nArrayBuffer.prototype.slice is not supported",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4038"
        },
        {
            "message": "Missing item type\nCreate a blob builder even when vendor prefixes exist",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4131"
        },
        {
            "message": "Missing item type\nCheck if Blob constructor is supported",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4140"
        },
        {
            "message": "Missing item type\nCheck if BlobBuilder is supported",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4153"
        },
        {
            "message": "Missing item type\nJSON parse.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4427"
        },
        {
            "message": "Missing item type\nCompiles a querystring\nReturns string representation of the object",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4461"
        },
        {
            "message": "Missing item type\nParses a simple querystring into an object",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4482"
        },
        {
            "message": "Missing item type\nParses an URI",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4500"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4542"
        },
        {
            "message": "Missing item type\nWebSocket constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4548"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4554"
        },
        {
            "message": "Missing item type\nWebSocket constructor.\n\nThe third `opts` options object gets ignored in web browsers, since it's\nnon-standard, and throws a TypeError if passed to the constructor.\nSee: https://github.com/einaros/ws/issues/227",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4560"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4594"
        },
        {
            "message": "Missing item type\nChecks for binary data.\n\nRight now only Buffer and ArrayBuffer are supported..",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4600"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4654"
        },
        {
            "message": "Missing item type\nModule exports.\n\nLogic borrowed from Modernizr:\n\n  - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4660"
        },
        {
            "message": "Missing item type\nReturns `this`. Execute this without a \"context\" (i.e. without it being\nattached to an object of the left-hand side), and `this` points to the\n\"global\" scope of the current JS execution.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4679"
        },
        {
            "message": "Missing item type\nHOP ref.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4700"
        },
        {
            "message": "Missing item type\nReturn own keys in `obj`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4706"
        },
        {
            "message": "Missing item type\nReturn own values in `obj`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4724"
        },
        {
            "message": "Missing item type\nMerge `b` into `a`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4742"
        },
        {
            "message": "Missing item type\nReturn length of `obj`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4760"
        },
        {
            "message": "Missing item type\nCheck if `obj` is empty.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4772"
        },
        {
            "message": "Missing item type\nParses an URI",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4784"
        },
        {
            "message": "Missing item type\nModule requirements",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4814"
        },
        {
            "message": "Missing item type\nReplaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\nAnything with blobs or files should be fed through removeBlobs before coming\nhere.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4821"
        },
        {
            "message": "Missing item type\nReconstructs a binary packet from its placeholder packet and buffers",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4864"
        },
        {
            "message": "Missing item type\nAsynchronously removes Blobs or Files from data via\nFileReader's readAsArrayBuffer method. Used before encoding\ndata as msgpack. Calls callback with the blobless data.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4899"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4957"
        },
        {
            "message": "Missing item type\nProtocol version.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4968"
        },
        {
            "message": "Missing item type\nPacket types.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4976"
        },
        {
            "message": "Missing item type\nPacket type `connect`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:4992"
        },
        {
            "message": "Missing item type\nPacket type `disconnect`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5000"
        },
        {
            "message": "Missing item type\nPacket type `event`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5008"
        },
        {
            "message": "Missing item type\nPacket type `ack`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5016"
        },
        {
            "message": "Missing item type\nPacket type `error`.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5024"
        },
        {
            "message": "Missing item type\nPacket type 'binary event'",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5032"
        },
        {
            "message": "Missing item type\nPacket type `binary ack`. For acks with binary arguments.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5040"
        },
        {
            "message": "Missing item type\nEncoder constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5048"
        },
        {
            "message": "Missing item type\nDecoder constructor.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5056"
        },
        {
            "message": "Missing item type\nA socket.io Encoder instance",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5064"
        },
        {
            "message": "Missing item type\nEncode a packet as a single string if non-binary, or as a\nbuffer sequence, depending on packet type.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5072"
        },
        {
            "message": "Missing item type\nEncode packet as string.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5094"
        },
        {
            "message": "Missing item type\nEncode packet as 'buffer sequence' by removing blobs, and\ndeconstructing packet into object with placeholders and\na list of buffers.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5141"
        },
        {
            "message": "Missing item type\nA socket.io Decoder instance",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5165"
        },
        {
            "message": "Missing item type\nMix in `Emitter` with Decoder.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5176"
        },
        {
            "message": "Missing item type\nDecodes an ecoded packet string into packet JSON.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5182"
        },
        {
            "message": "Missing item type\nDecode a packet String (JSON data)",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5221"
        },
        {
            "message": "Missing item type\nDeallocates a parser's resources",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5288"
        },
        {
            "message": "Missing item type\nA manager of a binary event's 'buffer sequence'. Should\nbe constructed whenever a packet of type BINARY_EVENT is\ndecoded.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5300"
        },
        {
            "message": "Missing item type\nMethod to be called when binary data received from connection\nafter a BINARY_EVENT packet.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5315"
        },
        {
            "message": "Missing item type\nCleans up binary packet reconstruction variables.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5335"
        },
        {
            "message": "Missing item type\nReturns true if obj is a buffer or an arraybuffer.",
            "line": " bin/node_modules/socket.io-client/socket.io.js:5358"
        }
    ]
}